<idea-plugin url="https://github.com/mplushnikov/lombok-intellij-plugin">
  <id>Lombook Plugin</id>
  <name>Lombok</name>
  <vendor url="https://github.com/mplushnikov/lombok-intellij-plugin" email="lombokplugin@plushnikov.de">Michail
    Plushnikov
  </vendor>
  <resource-bundle>messages.LombokBundle</resource-bundle>
  <version>0.34.1-2019.1</version>
  <idea-version since-build="191.6183" until-build="AI-231.*"/>
  <description>&lt;h1&gt;IntelliJ Lombok plugin&lt;/h1&gt;
&lt;br/&gt;
&lt;a href="https://github.com/mplushnikov/lombok-intellij-plugin"&gt;GitHub&lt;/a&gt; |
&lt;a href="https://github.com/mplushnikov/lombok-intellij-plugin/issues"&gt;Issues&lt;/a&gt; | Donate (
&lt;a href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=3F9HXD7A2SMCN"&gt;PayPal&lt;/a&gt; )
&lt;br/&gt;
&lt;br/&gt;

&lt;b&gt;A plugin that adds first-class support for Project Lombok&lt;/b&gt;
&lt;br/&gt;
&lt;br/&gt;

&lt;b&gt;Features&lt;/b&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href="https://projectlombok.org/features/GetterSetter.html"&gt;@Getter and @Setter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://projectlombok.org/features/experimental/FieldNameConstants"&gt;@FieldNameConstants&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://projectlombok.org/features/ToString.html"&gt;@ToString&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://projectlombok.org/features/EqualsAndHashCode.html"&gt;@EqualsAndHashCode&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://projectlombok.org/features/Constructor.html"&gt;@AllArgsConstructor, @RequiredArgsConstructor and
    @NoArgsConstructor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://projectlombok.org/features/Log.html"&gt;@Log, @Log4j, @Log4j2, @Slf4j, @XSlf4j, @CommonsLog,
    @JBossLog, @Flogger, @CustomLog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://projectlombok.org/features/Data.html"&gt;@Data&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://projectlombok.org/features/Builder.html"&gt;@Builder&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://projectlombok.org/features/experimental/SuperBuilder"&gt;@SuperBuilder&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://projectlombok.org/features/Builder.html#singular"&gt;@Singular&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://projectlombok.org/features/Delegate.html"&gt;@Delegate&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://projectlombok.org/features/Value.html"&gt;@Value&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://projectlombok.org/features/experimental/Accessors.html"&gt;@Accessors&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://projectlombok.org/features/experimental/Wither.html"&gt;@Wither&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://projectlombok.org/features/With.html"&gt;@With&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://projectlombok.org/features/SneakyThrows.html"&gt;@SneakyThrows&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://projectlombok.org/features/val.html"&gt;@val&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://projectlombok.org/features/var.html"&gt;@var&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://projectlombok.org/features/experimental/var.html"&gt;experimental @var&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href="https://projectlombok.org/features/experimental/UtilityClass.html"&gt;@UtilityClass&lt;/a&gt;&lt;/li&gt;
&lt;!--  &lt;li&gt;&lt;a href="https://projectlombok.org/features/experimental/ExtensionMethod.html"&gt;@ExtensionMethod (Experimental, activate manually in plugin settings)&lt;/a&gt;&lt;/li&gt;--&gt;
  &lt;li&gt;&lt;a href="https://projectlombok.org/features/configuration.html"&gt;Lombok config system&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Code inspections&lt;/li&gt;
  &lt;li&gt;Refactoring actions (lombok and delombok)&lt;/li&gt;
&lt;/ul&gt;
&lt;br/&gt;
</description>
  <category>Tools Integration</category>
  <depends>com.intellij.modules.lang</depends>
  <depends>com.intellij.modules.platform</depends>
  <depends>com.intellij.modules.java</depends>
  <extensions defaultExtensionNs="com.intellij">
    <postStartupActivity implementation="de.plushnikov.intellij.plugin.activity.LombokPluginUpdateActivity"/>
    <postStartupActivity implementation="de.plushnikov.intellij.plugin.activity.LombokProjectValidatorActivity"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.handler.BuilderHandler"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.handler.SuperBuilderHandler"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.handler.DelegateHandler"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.handler.EqualsAndHashCodeToStringHandler"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.ValProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.modifier.ValueModifierProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.modifier.ValModifierProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.modifier.UtilityClassModifierProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.modifier.FieldDefaultsModifierProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.constructor.AllArgsConstructorProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.constructor.NoArgsConstructorProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.constructor.RequiredArgsConstructorProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.log.LogProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.log.Log4jProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.log.Log4j2Processor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.log.Slf4jProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.log.XSlf4jProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.log.CommonsLogProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.log.JBossLogProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.log.FloggerProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.log.CustomLogProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.DataProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.EqualsAndHashCodeProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.GetterProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.SetterProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.ToStringProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.WitherProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.builder.BuilderPreDefinedInnerClassFieldProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.builder.BuilderPreDefinedInnerClassMethodProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.builder.BuilderClassProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.builder.BuilderProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.method.BuilderClassMethodProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.method.BuilderMethodProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.builder.SuperBuilderPreDefinedInnerClassFieldProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.builder.SuperBuilderPreDefinedInnerClassMethodProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.builder.SuperBuilderClassProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.builder.SuperBuilderProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.ValueProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.UtilityClassProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.fieldnameconstants.FieldNameConstantsOldProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.field.FieldNameConstantsFieldProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.fieldnameconstants.FieldNameConstantsProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.clazz.fieldnameconstants.FieldNameConstantsPredefinedInnerClassFieldProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.field.DelegateFieldProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.field.GetterFieldProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.field.SetterFieldProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.field.WitherFieldProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.method.DelegateMethodProcessor"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.processor.CleanupProcessor"/>
    <projectService serviceImplementation="de.plushnikov.intellij.plugin.provider.LombokProcessorProvider"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.lombokconfig.ConfigDiscovery"/>
    <applicationService serviceImplementation="de.plushnikov.intellij.plugin.settings.LombokSettings"/>
    <lang.psiAugmentProvider implementation="de.plushnikov.intellij.plugin.provider.LombokAugmentProvider"/>
    <implicitUsageProvider implementation="de.plushnikov.intellij.plugin.provider.LombokImplicitUsageProvider"/>
    <projectConfigurable groupId="language" instance="de.plushnikov.intellij.plugin.settings.ProjectSettingsPage"/>
    <treeGenerator implementation="de.plushnikov.intellij.plugin.extension.LombokLightMethodTreeGenerator"/>
    <lang.structureViewExtension implementation="de.plushnikov.intellij.plugin.extension.LombokStructureViewExtension"/>
    <daemon.highlightInfoFilter implementation="de.plushnikov.intellij.plugin.extension.LombokHighlightErrorFilter"/>
    <fileTypeFactory implementation="de.plushnikov.intellij.plugin.language.LombokConfigFileTypeFactory"/>
    <lang.parserDefinition language="Lombok.Config" implementationClass="de.plushnikov.intellij.plugin.language.LombokConfigParserDefinition"/>
    <lang.syntaxHighlighterFactory language="Lombok.Config" implementationClass="de.plushnikov.intellij.plugin.language.LombokConfigSyntaxHighlighterFactory"/>
    <colorSettingsPage implementation="de.plushnikov.intellij.plugin.language.LombokConfigColorSettingsPage"/>
    <completion.contributor language="Lombok.Config" implementationClass="de.plushnikov.intellij.plugin.language.LombokConfigCompletionContributor"/>
    <lang.commenter language="Lombok.Config" implementationClass="de.plushnikov.intellij.plugin.language.LombokConfigCommentor"/>
    <fileBasedIndex implementation="de.plushnikov.intellij.plugin.lombokconfig.LombokConfigIndex"/>
    <custom.exception.handler implementation="de.plushnikov.intellij.plugin.handler.SneakyThrowsExceptionHandler"/>
    <implicit.resource.closer implementation="de.plushnikov.intellij.plugin.extension.LombokCleanUpImplicitResourceCloser"/>
    <findUsagesHandlerFactory implementation="de.plushnikov.intellij.plugin.extension.LombokFieldFindUsagesHandlerFactory"/>
    <renameHandler implementation="de.plushnikov.intellij.plugin.extension.LombokElementRenameHandler" order="first"/>
    <renameHandler implementation="de.plushnikov.intellij.plugin.extension.LombokElementRenameVetoHandler" order="first"/>
    <renamePsiElementProcessor implementation="de.plushnikov.intellij.plugin.extension.LombokRenameMethodProcessor" order="first"/>
    <renamePsiElementProcessor implementation="de.plushnikov.intellij.plugin.extension.LombokRenameFieldReferenceProcessor"/>
    <java.elementFinder implementation="de.plushnikov.intellij.plugin.extension.LombokElementFinder" order="last"/>
    <inlineActionHandler implementation="de.plushnikov.intellij.plugin.action.inline.LombokInlineMethodHandler"/>
    <canBeFinal implementation="de.plushnikov.intellij.plugin.extension.LombokCanBeFinalHandler"/>
    <localInspection groupKey="inspection.lombok.group.name.lombok" groupBundle="messages.LombokBundle" shortName="Lombok" enabledByDefault="true" implementationClass="de.plushnikov.intellij.plugin.inspection.LombokInspection" key="inspection.lombok.display.name" bundle="messages.LombokBundle"/>
    <localInspection groupKey="inspection.lombok.group.name.lombok" groupBundle="messages.LombokBundle" shortName="DeprecatedLombok" enabledByDefault="true" implementationClass="de.plushnikov.intellij.plugin.inspection.DeprecatedLombokAnnotationInspection" key="inspection.deprecated.lombok.display.name" bundle="messages.LombokBundle"/>
    <localInspection groupPath="Lombok" groupKey="inspection.lombok.group.name.redundant.modifiers" groupBundle="messages.LombokBundle" shortName="RedundantModifiersValueLombok" enabledByDefault="true" implementationClass="de.plushnikov.intellij.plugin.inspection.modifiers.RedundantModifiersOnValueLombokAnnotationInspection" key="inspection.redundant.modifiers.value.lombok.display.name" bundle="messages.LombokBundle"/>
    <localInspection groupPath="Lombok" groupKey="inspection.lombok.group.name.redundant.modifiers" groupBundle="messages.LombokBundle" shortName="RedundantModifiersUtilityClassLombok" enabledByDefault="false" implementationClass="de.plushnikov.intellij.plugin.inspection.modifiers.RedundantModifiersOnUtilityClassLombokAnnotationInspection" key="inspection.redundant.modifiers.utility.class.lombok.display.name" bundle="messages.LombokBundle"/>
    <localInspection groupPath="Lombok" groupKey="inspection.lombok.group.name.redundant.definitions" groupBundle="messages.LombokBundle" shortName="RedundantSlf4jDefinition" enabledByDefault="true" implementationClass="de.plushnikov.intellij.plugin.inspection.RedundantSlf4jDefinitionInspection" key="inspection.redundant.slf.4.j.definition.display.name" bundle="messages.LombokBundle"/>
    <localInspection groupPath="Lombok" groupKey="inspection.lombok.group.name.redundant.modifiers" groupBundle="messages.LombokBundle" shortName="RedundantModifiersValLombok" enabledByDefault="true" implementationClass="de.plushnikov.intellij.plugin.inspection.modifiers.RedundantModifiersOnValLombokAnnotationInspection" key="inspection.redundant.modifiers.val.lombok.display.name" bundle="messages.LombokBundle"/>
    <intentionAction>
      <className>de.plushnikov.intellij.plugin.intention.valvar.to.ReplaceExplicitTypeWithValIntentionAction</className>
      <category>Lombok</category>
    </intentionAction>
    <intentionAction>
      <className>de.plushnikov.intellij.plugin.intention.valvar.to.ReplaceExplicitTypeWithVarIntentionAction</className>
      <category>Lombok</category>
    </intentionAction>
    <intentionAction>
      <className>de.plushnikov.intellij.plugin.intention.valvar.from.ReplaceValWithExplicitTypeIntentionAction</className>
      <category>Lombok</category>
    </intentionAction>
    <intentionAction>
      <className>de.plushnikov.intellij.plugin.intention.valvar.from.ReplaceVarWithExplicitTypeIntentionAction</className>
      <category>Lombok</category>
    </intentionAction>
    <intentionAction>
      <className>de.plushnikov.intellij.plugin.intention.ReplaceWithLombokAnnotationAction</className>
      <category>Lombok</category>
    </intentionAction>
    <codeInsight.template.postfixTemplateProvider language="JAVA" implementationClass="de.plushnikov.intellij.plugin.extension.postfix.LombokPostfixTemplateProvider"/>
    <codeInsight.externalLibraryResolver implementation="de.plushnikov.intellij.plugin.resolver.LombokExternalLibraryResolver"/>
  </extensions>
  <actions>
    <action id="GenerateConstructor" text="Constructor" overrides="true" class="de.plushnikov.intellij.plugin.action.generate.LombokGenerateConstructorAction"/>
    <group id="LombokActionGroup" icon="/icons/lombok.svg" popup="true">
      <action id="defaultLombokData" class="de.plushnikov.intellij.plugin.action.lombok.LombokDataAction"/>
      <separator/>
      <action id="defaultLombokGetter" class="de.plushnikov.intellij.plugin.action.lombok.LombokGetterAction"/>
      <action id="defaultLombokSetter" class="de.plushnikov.intellij.plugin.action.lombok.LombokSetterAction"/>
      <action id="defaultLombokEqualsAndHashcode" class="de.plushnikov.intellij.plugin.action.lombok.LombokEqualsAndHashcodeAction"/>
      <action id="defaultLombokToString" class="de.plushnikov.intellij.plugin.action.lombok.LombokToStringAction"/>
      <separator/>
      <action id="defaultLombokLogger" class="de.plushnikov.intellij.plugin.action.lombok.LombokLoggerAction"/>
      <add-to-group group-id="RefactoringMenu" anchor="last"/>
    </group>
    <group id="DelombokActionGroup" icon="/icons/lombok.svg" popup="true">
      <action id="delombokAny" class="de.plushnikov.intellij.plugin.action.delombok.DelombokEverythingAction"/>
      <separator/>
      <action id="delombokData" class="de.plushnikov.intellij.plugin.action.delombok.DelombokDataAction"/>
      <action id="delombokValue" class="de.plushnikov.intellij.plugin.action.delombok.DelombokValueAction"/>
      <action id="delombokWither" class="de.plushnikov.intellij.plugin.action.delombok.DelombokWitherAction"/>
      <action id="delombokDelegate" class="de.plushnikov.intellij.plugin.action.delombok.DelombokDelegateAction"/>
      <action id="delombokBuilder" class="de.plushnikov.intellij.plugin.action.delombok.DelombokBuilderAction"/>
      <action id="delombokSuperBuilder" class="de.plushnikov.intellij.plugin.action.delombok.DelombokSuperBuilderAction"/>
      <separator/>
      <action id="delombokConstructor" class="de.plushnikov.intellij.plugin.action.delombok.DelombokConstructorAction"/>
      <action id="delombokGetter" class="de.plushnikov.intellij.plugin.action.delombok.DelombokGetterAction"/>
      <action id="delombokSetter" class="de.plushnikov.intellij.plugin.action.delombok.DelombokSetterAction"/>
      <action id="delombokEqualsAndHashCode" class="de.plushnikov.intellij.plugin.action.delombok.DelombokEqualsAndHashCodeAction"/>
      <action id="delombokToString" class="de.plushnikov.intellij.plugin.action.delombok.DelombokToStringAction"/>
      <separator/>
      <action id="delombokLogger" class="de.plushnikov.intellij.plugin.action.delombok.DelombokLoggerAction"/>
      <action id="delombokFieldNameCostants" class="de.plushnikov.intellij.plugin.action.delombok.DelombokFieldNameConstantsAction"/>
      <action id="delombokUtilityClass" class="de.plushnikov.intellij.plugin.action.delombok.DelombokUtilityClassAction"/>
      <add-to-group group-id="RefactoringMenu" anchor="last"/>
    </group>
  </actions>
  <change-notes>&lt;ul&gt;
  &lt;li&gt;0.34.1
    &lt;ol&gt;
      &lt;li&gt;Fixed regression #998: Icon cannot be found 'icons/lombok.svg'&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.34
    &lt;ol&gt;
      &lt;li&gt;Updated all lombok icons&lt;/li&gt;
      &lt;li&gt;Reworked and simplified plugin settings page&lt;/li&gt;
      &lt;li&gt;Automatically activate annotation processing if lombok library is present in background&lt;/li&gt;
      &lt;li&gt;Automatically suggestion to add lombok library if not present in project with lombok annotations&lt;/li&gt;
      &lt;li&gt;Fixed #919: Builder ignores visibility of XArgsConstructor&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.33
    &lt;ol&gt;
      &lt;li&gt;Implemented new intention actions to replace explicit getter and setter by lombok annotation, thanks to
        @Lekanich (Aleksandr Zhelezniak)
      &lt;/li&gt;
      &lt;li&gt;Fixed #799: @SneakyThrows mistakenly swallow checked exception in lambda without "throws", thanks to
        @Lekanich (Aleksandr Zhelezniak)
      &lt;/li&gt;
      &lt;li&gt;Fixed #838: @Builder.Default and final keyword: erroneous ConstantConditions warning, thanks to
        @Lekanich (Aleksandr Zhelezniak)
      &lt;/li&gt;
      &lt;li&gt;Fixed #938: @SneakyThrows hides compilation error: Variable might not have been not initialized, thanks to
        @Lekanich (Aleksandr Zhelezniak)
      &lt;/li&gt;
      &lt;li&gt;Fixed #964: @With + @Builder.Default on Field doesn't work well with @Value on Class&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.32
    &lt;ol&gt;
      &lt;li&gt;Fixed #761: EqualsAndHashCode: Wrong warning 'A method with one of those names already exists'&lt;/li&gt;
      &lt;li&gt;Fixed #826: Error if using @FieldNameConstants in switch case&lt;/li&gt;
      &lt;li&gt;Fixed #858: Delombok produces duplicate @NonNull annotations on setters/getters&lt;/li&gt;
      &lt;li&gt;Fixed #933: Enable annotation processing warning showing everytime project is opened&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.31
    &lt;ol&gt;
      &lt;li&gt;Fixed #923: ArrayIndexOutOfBoundsException in ReplaceExplicitTypeWithVariableIntention&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.30
    &lt;ol&gt;
      &lt;li&gt;Fixed #570: Better support for @Builder.Default (var$set and var$value fields)&lt;/li&gt;
      &lt;li&gt;Fixed #754: Intention to convert explicit type to var/val or vice versa, thanks to @Sheigutn (Florian Böhm)
      &lt;/li&gt;
      &lt;li&gt;Fixed #760: Plugin and compiler disagree on @Builder method generation&lt;/li&gt;
      &lt;li&gt;Fixed #771: @Data No error message when there is no default constructor in superclass&lt;/li&gt;
      &lt;li&gt;Fixed #805: Do not use deprecated constructor injection&lt;/li&gt;
      &lt;li&gt;Fixed #807: Do not use ImplicitUsageProvider in GenerateConstructorAction&lt;/li&gt;
      &lt;li&gt;Fixed #822: @Builder annotation on multiple methods of same class is broken&lt;/li&gt;
      &lt;li&gt;Fixed #825: intellij objects to overriding builder methods when setterPrefix set&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.29
    &lt;ol&gt;
      &lt;li&gt;Added link for simply annotation processing activation into warning message box, thanks to @wyhasany (Michał
        Rowicki)
      &lt;/li&gt;
      &lt;li&gt;Added new inspection for redundant class and field modifiers for @Value annotated classes, thanks to @wyhasany
        (Michał Rowicki)
      &lt;/li&gt;
      &lt;li&gt;Fixed #740: Builder.build() method throws exceptions from wrong constructor&lt;/li&gt;
      &lt;li&gt;Fixed #735: FieldDefaults processing should check for @UtilityClass annotation, thanks to @Sheigutn (Florian
        Böhm)
      &lt;/li&gt;
      &lt;li&gt;Fixed #724: @Accessors with prefix can break with numbers, thanks to @Lekanich (Aleksandr Zhelezniak)&lt;/li&gt;
      &lt;li&gt;Fixed #719: Add support for new setterPrefix for Builder enhancement, thanks to @ocadaruma (Okada Haruki)&lt;/li&gt;
      &lt;li&gt;Fixed #680: Add support for lombok.builder.className config property, thanks to @tagae (Sebastián González)
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.28
    &lt;ol&gt;
      &lt;li&gt;Fixed #394: New feature request: Add SneakyThrows QuickFix, thanks to @Lekanich (Aleksandr Zhelezniak)&lt;/li&gt;
      &lt;li&gt;Fixed #440: NPE inspection false positive with lazy getters, thanks to @Lekanich (Aleksandr Zhelezniak)&lt;/li&gt;
      &lt;li&gt;Fixed #633: @Builder.Default causes a warning message, thanks to @Lekanich (Aleksandr Zhelezniak)&lt;/li&gt;
      &lt;li&gt;Fixed #672: Add support for @CustomLog, thanks to @juriad (Adam Juraszek)&lt;/li&gt;
      &lt;li&gt;Fixed #687: Support static constructors using already-defined private constructors, thanks to @vanam (Martin
        Váňa)
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.27
    &lt;ol&gt;
      &lt;li&gt;Fixed #513: Add support for @SuperBuilder&lt;/li&gt;
      &lt;li&gt;Fixed #629: Add support for lombok.fieldNameConstants.uppercase = true from lombok 1.18.8&lt;/li&gt;
      &lt;li&gt;Fixed #630: Add support for suppress generation of the builder method when using @Builder from lombok 1.18.8
      &lt;/li&gt;
      &lt;li&gt;Fixed #631: Add support for change the access modifier of generated builder classes from lombok 1.18.8&lt;/li&gt;
      &lt;li&gt;Fixed #526: StackOverflow with LombokLightParameterListBuilder.equals&lt;/li&gt;
      &lt;li&gt;Fixed #660: Performance problems in autocomplete/code analysis&lt;/li&gt;
      &lt;li&gt;Fixed #663: Method with varArgs gives an error in IntelliJ&lt;/li&gt;
      &lt;li&gt;Fixed #670: Non-idempotent computation issue with @Delegate usages&lt;/li&gt;
      &lt;li&gt;Fixed #673: Add support for @With&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.26.2 IntelliJ-2019.2
    &lt;ol&gt;
      &lt;li&gt;Compatibility issues with IntelliJ 2019.2&lt;/li&gt;
      &lt;li&gt;Fixed #637: Non-idempotent computation in Intellij 2019.2&lt;/li&gt;
      &lt;li&gt;Fixed #648: IDEA 2019.2 highlights builder() method invocation as an error&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.25
    &lt;ol&gt;
      &lt;li&gt;Fixed #406: Added delombok support for @UtilityClass&lt;/li&gt;
      &lt;li&gt;Fixed #522: Added configuration option to disable annotation processing warning&lt;/li&gt;
      &lt;li&gt;Fixed #580: '@ConstructorProperties' in Delomboked code&lt;/li&gt;
      &lt;li&gt;Fixed #590: Delombok class with @Value doesn't produce private final fields&lt;/li&gt;
      &lt;li&gt;Fixed #613: NullPointerException on AccessLevel enum when IDE window open&lt;/li&gt;
      &lt;li&gt;Fixed #617: Can't add new 'Java Postfix Completion shortcut'&lt;/li&gt;
      &lt;li&gt;Fixed #619: Added fallback support for old @FieldNameConstants behavior&lt;/li&gt;
      &lt;li&gt;Allow renaming lombok generated methods -&gt; substitute it with renaming of root elements&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.24
    &lt;ol&gt;
      &lt;li&gt;Fixed #353: Support for fieldDefaults in lombok.config&lt;/li&gt;
      &lt;li&gt;Fixed #547: Updated support for FieldNameConstants&lt;/li&gt;
      &lt;li&gt;Fixed #560: ProcessCanceledException when opening project&lt;/li&gt;
      &lt;li&gt;Fixed #577: 'SIMPLE_BAD_CHARACTER' error thrown during IntelliJ startup&lt;/li&gt;
      &lt;li&gt;Fixed #583: IntelliJ 2019.1 EAP: Plugin not supported&lt;/li&gt;
      &lt;li&gt;Fixed #584: AccessLevel not being respected for staticConstructorMethod by @All/@RequiredArgsConstructor&lt;/li&gt;
      &lt;li&gt;Fixed #593: Constructor body context is not set properly&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.23
    &lt;ol&gt;
      &lt;li&gt;Fixed #296: val does not resolve correct type for initializer with generic diamond&lt;/li&gt;
      &lt;li&gt;Fixed #437: Wrong compile error when using AllArgsConstructor.staticName&lt;/li&gt;
      &lt;li&gt;Fixed #556: Support for IDEA-2018.3&lt;/li&gt;
      &lt;li&gt;Dropped support of deprecated lombok annotations: lombok.experimental.Value and lombok.experimental.Builder;
        Use lombok.Value and lombok.Builder instead
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.22
    &lt;ol&gt;
      &lt;li&gt;Performance improvements #516: Editor UI freezes when editing a particular class&lt;/li&gt;
      &lt;li&gt;Fixed #504: Added Support for Delombok of @EqualsAndHashcode and @ToString Exclude/Include annotations&lt;/li&gt;
      &lt;li&gt;Fixed #507: @Value and @FieldDefaults should skip static fields&lt;/li&gt;
      &lt;li&gt;Fixed #472: Lombok should not interfer with java 10 'var'&lt;/li&gt;
      &lt;li&gt;Fixed #530: Remove explicit type argument leads to error&lt;/li&gt;
      &lt;li&gt;Fixed #531: Inspection for Lombok annotations incorrectly highlights 'var'&lt;/li&gt;
      &lt;li&gt;Better Support for @Cleanup: 'AutoCloseableResource'-Inspection can handle @Cleanup correctly in IntelliJ&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.21
    &lt;ol&gt;
      &lt;li&gt;Fixed Regression #533: StackOverflowError with PsiFieldImpl.isDeprecated&lt;/li&gt;
      &lt;li&gt;Removed obsolete support for hrisey&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.20
    &lt;ol&gt;
      &lt;li&gt;Fixed #119: IDEA doesn't rename builder method when field is renamed&lt;/li&gt;
      &lt;li&gt;Fixed #144: Find usages on field should find usages of builder/wither methods&lt;/li&gt;
      &lt;li&gt;Fixed #186: Find usages doesn't work (for example Accessors with Setter/Getter)&lt;/li&gt;
      &lt;li&gt;Fixed #295: Refactor Rename misses @Builder methods&lt;/li&gt;
      &lt;li&gt;Fixed #450: @Builder doesn't mark generated builder 'setters' as @Deprecated if the source field is
        deprecated
      &lt;/li&gt;
      &lt;li&gt;Fixed #497: Lombok plugin breaks creating Intellij IDEA postfix expressions&lt;/li&gt;
      &lt;li&gt;Fixed #499: @Builder does not respect @Accessors on fields&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.19
    &lt;ol&gt;
      &lt;li&gt;Fixed #475: Added support for @FieldNameConstants&lt;/li&gt;
      &lt;li&gt;Fixed #488: Added support for @Flogger annotation&lt;/li&gt;
      &lt;li&gt;Fixed #490: Added support for lombok.noArgsConstructor.extraPrivate&lt;/li&gt;
      &lt;li&gt;Fixed #473: Warning about Wither requiring AllArgsConstructor, although Builder provides one&lt;/li&gt;
      &lt;li&gt;Fixed #382: Added support for @XXX(onMethod_, onParam_, onConstructor_) for JDK8&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.18
    &lt;ol&gt;
      &lt;li&gt;Fixed #481: Fix plugin compatibility with IntelliJ 2018.2 EAP&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.17
    &lt;ol&gt;
      &lt;li&gt;Fixed #375: Added support for @Builder.Default&lt;/li&gt;
      &lt;li&gt;Fixed #465: Fix plugin compatibility with IntelliJ 2018.1&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.16
    &lt;ol&gt;
      &lt;li&gt;Fixed #210: Changing log annotation requires restart of Intellij to work&lt;/li&gt;
      &lt;li&gt;Fixed #270: Compile errors after moving an @Setter annotation by using IntelliJ move keyboard shortcut ⌥⇧↑
      &lt;/li&gt;
      &lt;li&gt;Fixed #365: [Feature request]IDEA .var suffix feature replacement&lt;/li&gt;
      &lt;li&gt;Fixed #379: StackOverflowException occurs sporadically when plugin enabled&lt;/li&gt;
      &lt;li&gt;Fixed #419: Stackoverflow in Intellij because of recursive delegation in @Delegate&lt;/li&gt;
      &lt;li&gt;Fixed #426: PSI equals shouldn't perform resolve&lt;/li&gt;
      &lt;li&gt;Fixed #427: Exception thrown when using *Find Usages* with ideavim&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.15.17.2
    &lt;ol&gt;
      &lt;li&gt;Fixed #415: Plugin Error: Lombok Plugin threw an uncaught NoClassDefFoundError&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.15
    &lt;ol&gt;
      &lt;li&gt;Fixed #134: Add suppot for toBuilder = true&lt;/li&gt;
      &lt;li&gt;Fixed #145: Overriding builder() method for @Builder shows false compilation error&lt;/li&gt;
      &lt;li&gt;Fixed #162: @Data/@XConstructor bug with default constructor&lt;/li&gt;
      &lt;li&gt;Improved #260: Handling val - Inferred Type is Object&lt;/li&gt;
      &lt;li&gt;Fixed #290: Getter and FieldDefaults with parameter AccessLevel in Enum shows "cannot access"&lt;/li&gt;
      &lt;li&gt;Fixed #337: Component name collision: 'UpdateComponent'&lt;/li&gt;
      &lt;li&gt;Fixed #339: Delombok for @ToString should use simpleName for class&lt;/li&gt;
      &lt;li&gt;Fixed #342: @EqualsAndHashCode/@ToString should treat explicit "of = {}" differently&lt;/li&gt;
      &lt;li&gt;Fixed #359: Explicit type can be diamond inspection is overloaded with the same id&lt;/li&gt;
      &lt;li&gt;Fixed #367: @Data on parent and child should be marked as compilation error&lt;/li&gt;
      &lt;li&gt;Fixed #393: @Builder with @Singular map produces duplicated variables&lt;/li&gt;
      &lt;li&gt;Fixed #399: IndexNotReadyException in FieldFindUsagesHandler&lt;/li&gt;
      &lt;li&gt;Fixed #412: @Accessors(fluent = true) does not impact @Wither but the plugin assumes it does&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.14
    &lt;ol&gt;
      &lt;li&gt;Fixed #209: Fixed @EqualsAndHashCode unnecessary warning&lt;/li&gt;
      &lt;li&gt;Fixed #212: Fixed Inspection "Field may be 'final'" triggers in spite of @Setter&lt;/li&gt;
      &lt;li&gt;Fixed #253: Fixed Refactor "Default @Getter" removes annotation on JPA entity classes&lt;/li&gt;
      &lt;li&gt;Fixed #302: Changed linked text in "Lombok Requires Annotation Processing" notification&lt;/li&gt;
      &lt;li&gt;Fixed #304: Fixed @FieldDefaults`s access level 'PUBLIC' doesn't work&lt;/li&gt;
      &lt;li&gt;Fixed #306: Problem with @Builder and generics&lt;/li&gt;
      &lt;li&gt;Fixed #308: Write access is allowed from write-safe contexts only&lt;/li&gt;
      &lt;li&gt;Fixed #313: Missed substitution when class and builder have generics&lt;/li&gt;
      &lt;li&gt;Fixed #320: Fixed No availability to generate any constructor&lt;/li&gt;
      &lt;li&gt;Fixed #322: Added support of lombok.experimental.var&lt;/li&gt;
      &lt;li&gt;Fixed #332: @Value(staticConstructor = "of") breaks intellij's type inference&lt;/li&gt;
      &lt;li&gt;Fixed #334: Added support for inlining getters/setters&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.13
    &lt;ol&gt;
      &lt;li&gt;Fixed #226: @Setter(AccessLevel.NONE) triggers error and not just warning on final fields&lt;/li&gt;
      &lt;li&gt;Fixed #254: Properties from lombok.config does not involve on suggestion list&lt;/li&gt;
      &lt;li&gt;Fixed #259: Support JBoss Logging (new in Lombok 1.16.10)&lt;/li&gt;
      &lt;li&gt;Fixed #262: When lombok.accessors.chain=true setters show void return value&lt;/li&gt;
      &lt;li&gt;Fixed #268: Lombok Dependency is possible outdated' message even when 'Enable lombok version warning' is
        unchecked.
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.12
    &lt;ol&gt;
      &lt;li&gt;Added support for transparent changing of visibility of existing fields and variables for IntelliJ 2016.2&lt;/li&gt;
      &lt;li&gt;Fixed #56: Missing auto-generated modifiers on fields and class shown in the "Structure" window when using
        `@Value`
      &lt;/li&gt;
      &lt;li&gt;Fixed #137: Private visibility added by @Value not respected by IDE.&lt;/li&gt;
      &lt;li&gt;Fixed #143: Support UtilityClass&lt;/li&gt;
      &lt;li&gt;Fixed #147: @FieldDefaults(makeFinal = true) and bitwise operators produce an error message&lt;/li&gt;
      &lt;li&gt;Fixed #158: val causes intellij to show an invalid error when used alongside an anonymous class&lt;/li&gt;
      &lt;li&gt;Fixed #202: @Builder supports setter for final field (@Value)&lt;/li&gt;
      &lt;li&gt;Fixed #230: @Value / @EqualsAndHashCode callSuper false warning: lombok.config ignored&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.11
    &lt;ol&gt;
      &lt;li&gt;Fixed #153: Configuration keys&lt;/li&gt;
      &lt;li&gt;Fixed #125: Support for lombok.getter.noIsPrefix&lt;/li&gt;
      &lt;li&gt;Fixed #128: Support @Slf4j with custom logger name&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.10
    &lt;ol&gt;
      &lt;li&gt;Overall significant performance optimizations&lt;/li&gt;
      &lt;li&gt;Fixed #88: Delegating to class with generics using @Delegate annotation&lt;/li&gt;
      &lt;li&gt;Fixed #136: "Cannot infer arguments" with @RequiredArgsConstructor&lt;/li&gt;
      &lt;li&gt;Fixed #157: Intellij fails to infer type for constructor defined with @RequiredArgsConstructor&lt;/li&gt;
      &lt;li&gt;Fixed #176: Unchecked warning when using static constructor for @Data and @Value on parametrized class&lt;/li&gt;
      &lt;li&gt;Fixed #180: Low performance of @Builder analysis&lt;/li&gt;
      &lt;li&gt;Fixed #184: Linter suggests to add @EqualsAndHashCode to declare callSuper, but already overriden&lt;/li&gt;
      &lt;li&gt;Fixed #105: val sometimes fails to be parsed correctly&lt;/li&gt;
      &lt;li&gt;Fixed #142: IDE highlights val as an error if it had reparsed code before the line was completed&lt;/li&gt;
      &lt;li&gt;Fixed #168: val does not work with generic method calls as the initializer expression&lt;/li&gt;
      &lt;li&gt;Fixed #180: Low performance of @Builder analysis&lt;/li&gt;
      &lt;li&gt;Fixed #183: val can not work when method has Generic return&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.9.8
    &lt;ol&gt;
      &lt;li&gt;Fixed #151: Builder issues with Accessors&lt;/li&gt;
      &lt;li&gt;Fixed #153: IntelliJ produces warning when specifying generic type on val declaration&lt;/li&gt;
      &lt;li&gt;Fixed #156: Exception in @Singular handling&lt;/li&gt;
      &lt;li&gt;Fixed #165: Can't correctly resolve multiple @Builder methods in same class having partial implementations
      &lt;/li&gt;
      &lt;li&gt;Fixed #172: "Lombok needs a default constructor in the base class" error in enum&lt;/li&gt;
      &lt;li&gt;Fixed #175: Added support for @Tolerate for @Getter and @Setter&lt;/li&gt;
      &lt;li&gt;Fixed #177: Null pointer in intellij version 15.0.3&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.9.7
    &lt;ol&gt;
      &lt;li&gt;Added caching of produced PsiElements to reduce probability of recursive invocation #112,#123, #126, #129&lt;/li&gt;
      &lt;li&gt;Fixed #130: @XArgsConstructor don't show error when used on a subclass that requires non-empty super call&lt;/li&gt;
      &lt;li&gt;Fixed #132: Make @EqualsAndHashCode(callSuper = true) default&lt;/li&gt;
      &lt;li&gt;Fixed #135: Added support for @NoArgsConstructor(force = true)&lt;/li&gt;
      &lt;li&gt;Fixed #149: Idea cannot generate another constructor when @NoArgsConstructor is used&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.9.6
    &lt;ol&gt;
      &lt;li&gt;Fixed #47: Feature request: support onX annotations via @__&lt;/li&gt;
      &lt;li&gt;Fixed #77: Support new @Singular annotation for @Builder collection fields&lt;/li&gt;
      &lt;li&gt;Fixed #123: SpinAllocator has exhausted! Too many threads or you're going to get StackOverflow&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.9.5
    &lt;ol&gt;
      &lt;li&gt;Fixed #48: Importing @Builder generated builder classes does not work&lt;/li&gt;
      &lt;li&gt;Added #77: Basic Support for new @Singular annotation for @Builder collection fields&lt;/li&gt;
      &lt;li&gt;Fixed #111: @Builder on constructors/methods is not recognized in Android Studio&lt;/li&gt;
      &lt;li&gt;Fixed #116: @Builder - Builder class can't be found without a static import&lt;/li&gt;
      &lt;li&gt;Added Hrisey @Parcelable support patch&lt;/li&gt;
      &lt;li&gt;Dropped outdated support for some lombok_pg annotations&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.9.4
    &lt;ol&gt;
      &lt;li&gt;Fixed regression #108: Getter/Setter wrong after last Update&lt;/li&gt;
      &lt;li&gt;Fixed #100, #72: AssertionError: Stub and PSI element type mismatch&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.9.3
    &lt;ol&gt;
      &lt;li&gt;Fixed #95: Fluent Setter Override Error&lt;/li&gt;
      &lt;li&gt;Fixed #96: @Value and @Wither not playing well together&lt;/li&gt;
      &lt;li&gt;Fixed #97: Two constructors being shown when using @Builder and @AllArgsConstructor together&lt;/li&gt;
      &lt;li&gt;Fixed #98: Plugin crash: IndexNotReadyException val processing&lt;/li&gt;
      &lt;li&gt;Fixed #101: @SneakyThrows causes incorrect errors in IntelliJ 14&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.9.2
    &lt;ol&gt;
      &lt;li&gt;Added #9: Basic val support in IntelliJ 14.1&lt;/li&gt;
      &lt;li&gt;Fixed #81: @Builder: buildMethod should have same throws-list as annotated static method&lt;/li&gt;
      &lt;li&gt;Fixed #82: Abstract Class + @Delegate&lt;/li&gt;
      &lt;li&gt;Fixed #83: Getting inconvertible types error assigning new builder instance&lt;/li&gt;
      &lt;li&gt;Fixed #84: Properly find usages of @Getters &amp; @Setters on fields with @Acccessor prefixes&lt;/li&gt;
      &lt;li&gt;Fixed #90: Renaming a field with different case doesn't rename getter&lt;/li&gt;
      &lt;li&gt;Fixed #92: Improved @Wither support&lt;/li&gt;
      &lt;li&gt;Fixed #93: IntelliJ unable to resolve constructor when using @Builder and @Value together&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.9.1
    &lt;ol&gt;
      &lt;li&gt;Fixed #33: Builder annotation with partial implementation shows errors&lt;/li&gt;
      &lt;li&gt;Fixed #78: Support for constructors of @Value objects with assigned final fields&lt;/li&gt;
      &lt;li&gt;Fixed #79: Support for multiple @Builder in same java class&lt;/li&gt;
      &lt;li&gt;Fixed #80: Some issues with "delomboked" @Builder on static method&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.9.0
    &lt;ol&gt;
      &lt;li&gt;Added Delombok Feature for @Builder&lt;/li&gt;
      &lt;li&gt;Issue #53: Basic Support for Lombok configuration keys&lt;/li&gt;
      &lt;li&gt;Fixed #57: Incorrect constructors appear in "Structure" when `@Value` and `@Builder`&lt;/li&gt;
      &lt;li&gt;Fixed #70: Conflict resolution failed on renaming field together with its accessors in IntelliJ 14&lt;/li&gt;
      &lt;li&gt;Issue #74: Fixed (only IntelliJ 14+) Sneaky Throws Not Correctly Detected for Anonymous Inner Class&lt;/li&gt;
      &lt;li&gt;Issue #75: Added support for @lombok.Builder (lombok version 1.16)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.8.9
    &lt;ol&gt;
      &lt;li&gt;Fixed #67: Updates and Improvements for IntelliJ 14, fixed incompatibility&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.8.8
    &lt;ol&gt;
      &lt;li&gt;Fixed #52 : Invalid stub element type in index&lt;/li&gt;
      &lt;li&gt;Fixed #54 : @Wither copies @Nullable annotation to generated method&lt;/li&gt;
      &lt;li&gt;Fixed #62 : Intellij shows error on Lazy Getter&lt;/li&gt;
      &lt;li&gt;Fixed #63 : Added support for @Tolerate (together with @Value, @Data)&lt;/li&gt;
      &lt;li&gt;Fixed issue 109(on GoogleCode): Intellij freezes regularly when the lombok plugin is enabled&lt;/li&gt;
      &lt;li&gt;Fixed issue 106(on GoogleCode): Static methods annotated with @Builder are not recognized&lt;/li&gt;
      &lt;li&gt;Updated to lombok changes: canEqual (of @EqualsAndHashCode fame) should be protected instead of public.&lt;/li&gt;
      &lt;li&gt;Basic autocompletion and highlighting for lombok.config files&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.8.7
    &lt;ol&gt;
      &lt;li&gt;Fixed issue 104(on GoogleCode): Intellij reports unused field with @Getter and @Setter&lt;/li&gt;
      &lt;li&gt;Fixed #50 : @SneakyThrows does not work for try-with-resource statements&lt;/li&gt;
      &lt;li&gt;Fixed #51 : Delegate annotation moved to experimental&lt;/li&gt;
      &lt;li&gt;Fixed #58 : NoSuchMethodError in IntelliJ 14 EAP&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.8.6
    &lt;ol&gt;
      &lt;li&gt;Added basic refactoring actions for Lombok @Data, @ToString and @EqualsAndHashcode methods&lt;/li&gt;
      &lt;li&gt;Fixed #46 : @SneakyThrows does not work on methods which throws multiple exceptions&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.8.5
    &lt;ol&gt;
      &lt;li&gt;Fixed #44 : @SneakyThrows doesn't hide exception on Intellij13&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.8.4
    &lt;ol&gt;
      &lt;li&gt;Fixed #20 : Inspection of lombok annotations say I can't use @Builder on constructor&lt;/li&gt;
      &lt;li&gt;Fixed issue 92(on Googlecode) : Plugin flags @Builder annotations when they are placed on contructors&lt;/li&gt;
      &lt;li&gt;Fixed #41 : Error with @Builder&lt;/li&gt;
      &lt;li&gt;Fixed #42 : Added Extension to populate Structure view&lt;/li&gt;
      &lt;li&gt;Fixed issue 13(on GoogleCode): @SneakyThrows does not hide Unhandled Exception Error&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.8.3
    &lt;ol&gt;
      &lt;li&gt;Fixed #17: Cyclic parent child relation&lt;/li&gt;
      &lt;li&gt;Fixed #34: Lombok plugin crashes&lt;/li&gt;
      &lt;li&gt;Fixed #36: Possible class cast exception&lt;/li&gt;
      &lt;li&gt;Fixed #37: Delombok of files included as library failes&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.8.2
    &lt;ol&gt;
      &lt;li&gt;Added support for "topic" annotation value of all @Log annotations (Lombok &gt;= 1.12.6)&lt;/li&gt;
      &lt;li&gt;Added validation of static fields/methods of @Delegate annotation (@Delegate is legal only on instance fields
        or no-argument instance methods)
      &lt;/li&gt;
      &lt;li&gt;Fixed #19: Slf4j in static context&lt;/li&gt;
      &lt;li&gt;Fixed #29: Renaming a class with the @Log* annotation adds extra qualification to calls&lt;/li&gt;
      &lt;li&gt;Fixed #31: Prevent errors with invalid identifiers for builderClassName in @Builder annotation&lt;/li&gt;
      &lt;li&gt;Fixed #32: Refactor -&gt; Extract -&gt; Parameter Object || Change Signature broken&lt;/li&gt;
      &lt;li&gt;Fixed (on GoogleCode) #83: @Slf4j does not work when added for first time&lt;/li&gt;
      &lt;li&gt;Fixed (on GoogleCode) #100: Refactor Change Signature || Extract - Parameter Object&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.8.1
    &lt;ol&gt;
      &lt;li&gt;Issue (on Git) #23: Fixed @Delegate inspection reports error&lt;/li&gt;
      &lt;li&gt;Issue (on Git) #27: Fixed @Delegate on a type parameter doesn't fail&lt;/li&gt;
      &lt;li&gt;Issue #60: Fixed @Delegate on methods is not supported now&lt;/li&gt;
      &lt;li&gt;Issue #98: Fixed Lombok Experimental Accessor Prefix does not handle non-alphanumeric prefixes&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.8.0
    &lt;ol&gt;
      &lt;li&gt;Added refactoring action for Lombok @Log and friends, @Getter and @Setter methods&lt;/li&gt;
      &lt;li&gt;Added refactoring actions to Delombok @Data, @Value, @Wither, @Constructors, @Getter, @Setter,
        @EqualsAndHashCode, @ToString and @Log annotations
      &lt;/li&gt;
      &lt;li&gt;Fixed problem with renaming fields in class containing lombok @Getter and @Setter&lt;/li&gt;
      &lt;li&gt;Issue #94: Fixed Intellij does not correctly create the constructor with @RequiredAllConstructor for classes
        with @Value
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.7.3
    &lt;ol&gt;
      &lt;li&gt;Fix IllegalArgumentException when trying to expand method names on IntelliJ 11&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.7.2
    &lt;ol&gt;
      &lt;li&gt;Fix multiple stackoverflow exceptions&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.7.1
    &lt;ol&gt;
      &lt;li&gt;Some performance optimizations&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.7
    &lt;ol&gt;
      &lt;li&gt;Added partial support for @Value lombok annotations&lt;/li&gt;
      &lt;li&gt;Added support for @Accessors lombok experimental annotation&lt;/li&gt;
      &lt;li&gt;Added support for @Wither lombok experimental annotation&lt;/li&gt;
      &lt;li&gt;Added support for @Builder lombok experimental annotations&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.6.5
    &lt;ol&gt;
      &lt;li&gt;Issue #20 Fixed Using @Delegate together with generic methods produced red underlining in the editor window
      &lt;/li&gt;
      &lt;li&gt;Issue #29 Fixed @Delegate leads to exception in LombokLightParameter&lt;/li&gt;
      &lt;li&gt;Issue #37 and #59 Fixed @EqualsAndHashCode inspection for callSuper parameter&lt;/li&gt;
      &lt;li&gt;Issue #54 Valid code produces inspections errors - anonymous instance, partial implementation&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.6.4
    &lt;ol&gt;
      &lt;li&gt;Issue #49 Deprecated fields should generate deprecated methods&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.6.3
    &lt;ol&gt;
      &lt;li&gt;Issue #41 Added support for XSlf4j and Log4j2 logger&lt;/li&gt;
      &lt;li&gt;Issue #44 Fixed Getter- and Setter- method generation, when method is already there with a parameter(s)&lt;/li&gt;
      &lt;li&gt;Issue #56 Removed obsolete plugin dependencies (they have been merged into intellij core)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.6.2
    &lt;ol&gt;
      &lt;li&gt;Issue #50 Compiled with java 1.7 -&gt; Don't work under java 1.6 vms&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.6
    &lt;ol&gt;
      &lt;li&gt;Issue #23 Updated to run with IntelliJ 12&lt;/li&gt;
      &lt;li&gt;Issue #42 IllegalArgumentException with Intellij 12&lt;/li&gt;
      &lt;li&gt;Issue #48 IllegalArgumentException with Intellij 12&lt;/li&gt;
      &lt;li&gt;Issue #38 Added ability to enable/disable lombok-intellij-plugin per project-configuration
        and reduced logging-level of plugin
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.5
    &lt;ol&gt;
      &lt;li&gt;Issue #23 Initial support for IntelliJ 12&lt;/li&gt;
      &lt;li&gt;Issue #12 Added support for "Singleton" and "EnumId" annotations from lombok-pg&lt;/li&gt;
      &lt;li&gt;Fixed Issue #27 "@EqualsAndHashCode on final classes: Should not have a canEquals in that case."&lt;/li&gt;
      &lt;li&gt;Fixed Issue #28 "Getters and setters should be generated even if the method exists with different parameter
        count"
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.4
    &lt;ol&gt;
      &lt;li&gt;fix reflection access for intellij ultimate&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.3
    &lt;ol&gt;
      &lt;li&gt;Fixed issue #4 "Getter/Setter on generic types"&lt;/li&gt;
      &lt;li&gt;Fixed issue #6 "The Plugin panel in IDEA lists the plugin as "Lombook Plugin (doubled letter 'o')"&lt;/li&gt;
      &lt;li&gt;Fixed issue #7 "Added support for IntelliJ 11"&lt;/li&gt;
      &lt;li&gt;Fixed issue #9 "@Data(staticConstructor="of") is not created"&lt;/li&gt;
      &lt;li&gt;Fixed issue #10 "Empty constructor is created even if it already exists"&lt;/li&gt;
      &lt;li&gt;Fixed issue #15 "@Data with @NoArgsConstructor does not generate default constructor"&lt;/li&gt;
      &lt;li&gt;Fixed issue #17 "Incompatibility with javax.annotation.Nonnull/Nullable"&lt;/li&gt;
      &lt;li&gt;Added more inspections and QuickFixes for some of lombok annotations.&lt;/li&gt;
      &lt;li&gt;Fixed: skip constructor generation for @Data if some constructor is already defined in the class&lt;/li&gt;
      &lt;li&gt;Fixed: skip getter generation for invalid lazy-getters&lt;/li&gt;
      &lt;li&gt;Added support for "LazyGetter" and "FluentSetter" annotations from lombok-pg&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.2
    &lt;ol&gt;
      &lt;li&gt;Added inspections for lombok annotations.&lt;/li&gt;
      &lt;li&gt;Added some simple QuickFixes for lombok inspections.&lt;/li&gt;
      &lt;li&gt;Fixed bug with not working auto-completion in the same source file with lombok annotations that generate
        methods.
      &lt;/li&gt;
      &lt;li&gt;Better support of lombok annotations, especially for 'staticName','types' and 'excludes' properties of
        @Delegate and @XXXConstructor
      &lt;/li&gt;
      &lt;li&gt;General bug fixing and many improvements&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;0.1
    &lt;ol&gt;
      &lt;li&gt;Initial Release for IDEA &gt;= 10.0&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</change-notes>
</idea-plugin>
