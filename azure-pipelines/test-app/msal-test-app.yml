# File: azure-pipelines\test-app\msal-test-app.yml
# Description: Build MSAL test app APK
# Variable 'local_msal_branch' was defined in the Variables tab
# Variable 'msal_version' was defined in the Variables tab
# Variable: 'ENV_VSTS_MVN_ANDROIDMSAL_ACCESSTOKEN' was defined in the Variables tab
# https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate
name: $(Build.BuildId)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger: none
pr: none

schedules:
  - cron: 0 3 * * *
    branches:
      include:
        - master
    always: true

parameters:
- name: productFlavors
  displayName: Product Flavor
  type: string
  default: Local
  values:
  - Local
  - Dist
- name: signingConfigurations
  displayName: Signing Configuration
  type: string
  default: Debug
  values:
  - Debug
  - Release

resources:
  repositories:
  - repository: common
    type: github
    name: AzureAD/microsoft-authentication-library-common-for-android
    ref: dev
    endpoint: ANDROID_GITHUB
  - repository: msal
    type: github
    name: AzureAD/microsoft-authentication-library-for-android
    ref: dev
    endpoint: ANDROID_GITHUB
    # We need broker to get otelexporter
  - repository: broker
    type: github
    name: AzureAD/ad-accounts-for-android
    ref: dev
    endpoint: ANDROID_GITHUB


jobs:
- job: msal_test_app
  displayName: Build MSAL Test App ${{ parameters.productFlavors }} ${{ parameters.signingConfigurations }} ${{variables.msal_version}} APK
  pool:
    vmImage: 'windows-latest'
  variables:
  - group: AndroidAuthClientVariables
  steps:
  - checkout: self
    clean: true
    path: android-complete
  - checkout: msal
    clean: true
    path: android-complete/msal
  - checkout: broker
    clean: true
    path: android-complete/broker
  - checkout: common
    clean: true
    path: android-complete/common
  - ${{ if eq(parameters.productFlavors, 'Dist') }}:
    - task: PowerShell@2
      displayName: Generate Assemble Dist Task
      inputs:
        targetType: inline
        script: |
          $assembleTask = "assembleDist${{ parameters.signingConfigurations }}"
          if (("$(msal_version)" -ne "")) {
              $assembleTask = $assembleTask + " -PdistMsalVersion=" + "$(msal_version)"
          }
          Write-Host "##vso[task.setvariable variable=AssembleTask;]$assembleTask"
  - ${{ if eq(parameters.productFlavors, 'Local') }}:
    - pwsh: echo "##vso[task.setvariable variable=AssembleTask;]assembleLocal${{ parameters.signingConfigurations }}"
      displayName: Generate Assemble Local Task
  - task: CmdLine@1
    displayName: Set MVN AccessToken in Environment
    inputs:
      filename: echo
      arguments: '##vso[task.setvariable variable=ENV_VSTS_MVN_ANDROIDADACCOUNTS_ACCESSTOKEN]$(System.AccessToken)'
  - task: Gradle@1
    name: Gradle1
    displayName: Assemble msalTestApp
    inputs:
      tasks: msalTestApp:clean msalTestApp:$(AssembleTask)
      publishJUnitResults: false
      jdkArchitecture: x86
      sqAnalysisBreakBuildIfQualityGateFailed: false
      gradleWrapperFile: $(Agent.BuildDirectory)/android-complete/gradlew
      jdkVersionOption: 11
      cwd: $(Agent.BuildDirectory)/android-complete
  - task: PublishPipelineArtifact@1
    displayName: Publish MSAL Test App
    inputs:
      targetPath: $(Agent.BuildDirectory)/android-complete/msal/testapps/testapp/build/outputs/apk/${{ lower(parameters.productFlavors) }}/${{ lower(parameters.signingConfigurations) }}
      artifactName: msalTestApp
      patterns: '**/*.apk'
...
