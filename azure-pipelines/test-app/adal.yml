# File: azure-pipelines\test-app\adal.yml
# Description: Generate ADAL test app APK
# use branch_<project> variables to build the Local version
# use version_<project> variables to build the Dist version
# Variable 'branch_[adal, common]' was defined in the Variables tab
# Variable 'version_[adal, common]' was defined in the Variables tab
# Variable: 'ENV_VSTS_MVN_ANDROIDADAL_ACCESSTOKEN' was defined in the Variables tab
# Variable: 'mvnAccessToken' was defined in the Variables tab
# https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate
name: $(date:yyyyMMdd)$(rev:.r)

trigger: none
pr: none

parameters:
- name: productFlavors
  displayName: Product Flavor
  type: string
  default: Local
  values:
  - Local
  - Dist
- name: signingConfigurations
  displayName: Signing Configuration
  type: string
  default: Debug
  values:
  - Debug
  - Release

resources:
  repositories:
  - repository: common
    type: github
    name: AzureAD/microsoft-authentication-library-common-for-android
    ref: $(branch_common)
    endpoint: ANDROID_GITHUB
  - repository: adal
    type: github
    name: AzureAD/azure-activedirectory-library-for-android
    ref: $(branch_adal)
    endpoint: ANDROID_GITHUB

jobs:
- job: adal-test-app
  displayName: Build ADAL Test App ${{ parameters.productFlavors }} ${{ parameters.signingConfigurations }} APK
  pool:
    name: Hosted Windows 2019 with VS2019
  steps:
  - checkout: self
    clean: true
    path: android-complete
  - checkout: common
    clean: true
    path: android-complete/common
  - checkout: adal
    clean: true
    path: android-complete/adal
  - ${{ if eq(parameters.productFlavors, 'Dist') }}:
    - task: PowerShell@2
      displayName: Generate Assemble Dist Task
      inputs:
        targetType: inline
        script: |
          $assembleTask = "assembleDist${{ parameters.signingConfigurations }}"
          if (("$(version_common)" -ne "")) {
              $assembleTask = $assembleTask + " -PdistCommonVersion=" + "$(version_common)"
          }
          if (("$(version_adal)" -ne "")) {
              $assembleTask = $assembleTask + " -PdistAdalVersion=" + "$(version_adal)"
          }
          Write-Host "##vso[task.setvariable variable=AssembleTask;]$assembleTask"
  - ${{ if eq(parameters.productFlavors, 'Local') }}:
    - pwsh: echo "##vso[task.setvariable variable=AssembleTask;]assembleLocal${{ parameters.signingConfigurations }}"
      displayName: Generate Assemble Local Task
  - task: CmdLine@1
    displayName: Set MVN AccessToken in Environment
    inputs:
      filename: echo
      arguments: '##vso[task.setvariable variable=ENV_VSTS_MVN_ANDROIDADAL_ACCESSTOKEN]$(mvnAccessToken)'
  - task: Gradle@1
    name: Gradle1
    displayName: Assemble adalTestApp
    inputs:
      tasks: adalTestApp:clean adalTestApp:$(AssembleTask)
      publishJUnitResults: false
      jdkArchitecture: x86
      sqAnalysisBreakBuildIfQualityGateFailed: false
  - task: PublishPipelineArtifact@1
    displayName: Publish ADAL Test App
    inputs:
      targetPath: C:/temp/android_auth/adalTestApp/outputs/apk/${{ lower(parameters.productFlavors) }}/${{ lower(parameters.signingConfigurations) }}
      artifactName: adalTestApp
      patterns: '**/*.apk'
...
