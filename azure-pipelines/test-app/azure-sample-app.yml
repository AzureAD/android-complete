# File: azure-pipelines\test-app\azure-sample-app.yml
# Description: Generate AzureSample APK
# use <project>_branch variables to build the Local version
# use <project>_version variables to build the External version
# Variable '[msal, azuresample]_branch' was defined in the Variables tab
# Variable '[msal, azuresample]_version' was defined in the Variables tab
# Variable: 'ENV_VSTS_MVN_ANDROID_MSAL_USERNAME' was defined in the Variables tab
# Variable: 'mvnAccessToken' was defined in the Variables tab
# https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate
name: $(date:yyyyMMdd)$(rev:.r)

trigger: none
pr: none

parameters:
- name: productFlavors
  displayName: Product Flavor
  type: string
  default: Local
  values:
  - Local
  - External
- name: signingConfigurations
  displayName: Signing Configuration
  type: string
  default: Debug
  values:
  - Debug
  - Release

resources:
  repositories:
  - repository: msal
    type: github
    name: AzureAD/microsoft-authentication-library-for-android
    ref: $(msal_branch)
    endpoint: ANDROID_GITHUB
  - repository: azuresample
    type: github
    name: Azure-Samples/ms-identity-android-java
    ref: $(azuresample_branch)
    endpoint: ANDROID_GITHUB

jobs:
- job: azure_samples
  displayName: Azure Samples ${{ parameters.productFlavors }} ${{ parameters.signingConfigurations }} APK
  pool:
    name: Hosted Windows 2019 with VS2019
  steps:
  - checkout: self
    clean: true
    path: android-complete
  - checkout: msal
    clean: true
    submodules: true
    path: android-complete/msal
  - checkout: azuresample
    clean: true
    submodules: true
    path: android-complete/azuresample
  - ${{ if eq(parameters.productFlavors, 'External') }}:
    - task: PowerShell@2
      displayName: Generate Assemble External Task
      inputs:
        targetType: inline
        script: |
          $assembleTask = "assembleExternal${{ parameters.signingConfigurations }}"
          if (("$(msal_version)" -ne "")) {
              $assembleTask = $assembleTask + " -PdistMsalVersion=" + "$(msal_version)"
          }
          Write-Host "##vso[task.setvariable variable=AssembleTask;]$assembleTask"
  - ${{ if eq(parameters.productFlavors, 'Local') }}:
    - pwsh: echo "##vso[task.setvariable variable=AssembleTask;]assembleLocal${{ parameters.signingConfigurations }}"
      displayName: Generate Assemble Local Task
  - task: CmdLine@1
    displayName: Set MVN AccessToken in Environment
    inputs:
      filename: echo
      arguments: '##vso[task.setvariable variable=ENV_VSTS_MVN_ANDROIDADAL_ACCESSTOKEN]$(mvnAccessToken)'
  - task: Gradle@1
    name: Gradle1
    displayName: Assemble Azure Sample
    inputs:
      tasks: AzureSample:clean AzureSample:$(AssembleTask)
      publishJUnitResults: false
      jdkArchitecture: x86
      sqAnalysisBreakBuildIfQualityGateFailed: false
      gradleWrapperFile: $(Agent.BuildDirectory)/android-complete/gradlew
      cwd: $(Agent.BuildDirectory)/android-complete
  - task: PublishPipelineArtifact@1
    displayName: Publish Broker Host APK
    inputs:
      targetPath: C:/temp/android_auth/AzureSample/outputs/apk/${{ lower(parameters.productFlavors) }}/${{ lower(parameters.signingConfigurations) }}
      artifactName: AzureSample
      patterns: '**/*.apk'
...
