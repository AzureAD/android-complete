# File: azure-pipelines\test-app\azure-sample-app.yml
# Description: Generate AzureSample APK
# use local_<project>_branch variables to build the Local version
# use dist_<project>_version variables to build the External version
# Variable 'local_[msal, azuresample]_branch' was defined in the Variables tab
# Variable 'dist_[msal, azuresample]_version' was defined in the Variables tab
# Variable: 'ENV_VSTS_MVN_ANDROID_MSAL_USERNAME' was defined in the Variables tab
# https://docs.microsoft.com/en-us/azure/devops/organizations/accounts/use-personal-access-tokens-to-authenticate
name: $(Build.BuildId)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger: none
pr: none

schedules:
  - cron: 0 3 * * *
    branches:
      include:
        - master
    always: true

parameters:
- name: productFlavors
  displayName: Product Flavor
  type: string
  default: Local
  values:
  - Local
  - External
- name: signingConfigurations
  displayName: Signing Configuration
  type: string
  default: Debug
  values:
  - Debug
  - Release

resources:
  repositories:
  - repository: msal
    type: github
    name: AzureAD/microsoft-authentication-library-for-android
    ref: dev
    endpoint: ANDROID_GITHUB
  - repository: azuresample
    type: github
    name: Azure-Samples/ms-identity-android-java
    ref: master
    endpoint: ANDROID_GITHUB
  - repository: common
    type: github
    name: AzureAD/microsoft-authentication-library-common-for-android
    ref: dev
    endpoint: ANDROID_GITHUB

jobs:
- job: azure_samples
  displayName: Build Azure Samples ${{ parameters.productFlavors }} ${{ parameters.signingConfigurations }} APK
  pool:
    vmImage: 'windows-latest'
  variables:
  - group: AndroidAuthClientVariables
  steps:
  - checkout: self
    clean: true
    path: android-complete
  - checkout: msal
    clean: true
    path: android-complete/msal
  - checkout: common
    clean: true
    path: android-complete/common
  - checkout: azuresample
    clean: true
    path: android-complete/azuresample
  - ${{ if eq(parameters.productFlavors, 'External') }}:
    - task: PowerShell@2
      displayName: Generate Assemble External Task
      inputs:
        targetType: inline
        script: |
          $assembleTask = "assembleExternal${{ parameters.signingConfigurations }}"
          if (("$(dist_msal_version)" -ne "")) {
              $assembleTask = $assembleTask + " -PdistMsalVersion=" + "$(dist_msal_version)"
          }
          Write-Host "##vso[task.setvariable variable=AssembleTask;]$assembleTask"
  - ${{ if eq(parameters.productFlavors, 'Local') }}:
    - pwsh: echo "##vso[task.setvariable variable=AssembleTask;]assembleLocal${{ parameters.signingConfigurations }}"
      displayName: Generate Assemble Local Task
  - task: CmdLine@1
    displayName: Set MVN AccessToken in Environment
    inputs:
      filename: echo
      arguments: '##vso[task.setvariable variable=ENV_VSTS_MVN_ANDROIDADACCOUNTS_ACCESSTOKEN]$(System.AccessToken)'
  - task: Gradle@3
    name: Gradle3
    displayName: Assemble Azure Sample
    inputs:
      tasks: AzureSample:clean AzureSample:$(AssembleTask)
      publishJUnitResults: false
      jdkArchitecture: x86
      jdkVersionOption: "1.11"
      gradleWrapperFile: $(Agent.BuildDirectory)/android-complete/gradlew
      cwd: $(Agent.BuildDirectory)/android-complete
  - task: PublishPipelineArtifact@1
    displayName: Publish Broker Host APK
    inputs:
      targetPath: $(Agent.BuildDirectory)/android-complete/azuresample/app/build/outputs/apk/${{ lower(parameters.productFlavors) }}/${{ lower(parameters.signingConfigurations) }}
      artifactName: AzureSample
      patterns: '**/*.apk'
...
