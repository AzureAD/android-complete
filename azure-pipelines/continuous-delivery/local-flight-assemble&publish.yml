# File: azure-pipelines/continuous-delivery/assemble&publish.yml
# Description: Template to assemble & publish dev builds of auth client android sdk libraries to internal maven feed

parameters:
  - name: repository
  - name: project
  - name: assembleCmd
    default: assemble
  - name: testCmd
    default: test
  - name: broker4jVersion
    type: string
  - name: shouldPassLocalFlights
    type: boolean
  - name: localFlightsParamString
    type: string
  - name: publishCmd
    default: publish
  - name: dependencyParams
    default: ''
  - name: assembleParams
    default: ''
  - name: publishParams
    default: ''
  - name: vstsMvnAndroidUsername
  - name: vstsMvnAndroidAccessToken
  - name: shouldPublish
    type: boolean
    default: True
  - name: agentImage
    default: none
  - name: shouldRunUnitTests
    type: boolean
    default: True

jobs:
  - job: publish${{ parameters.project }}Libraries
    displayName: ${{ parameters.project }} build & publish
    pool:
      ${{ if eq(parameters.agentImage, 'none') }}:
        vmImage: ubuntu-latest
      ${{ else }}:
        name: ${{ parameters.agentImage }}
    variables:
      - group: AndroidAuthClientVariables
    steps:
      - checkout: ${{ parameters.repository }}
        persistCredentials: True
      - task: Bash@3
        displayName: Pass Local Flights Check
        inputs:
          targetType: inline
          script: |
            echo "Performing security check for pushing local flights..."
            echo "Local Flights boolean parameter set to ${{ parameters.shouldPassLocalFlights }}"
            if (( ${{ parameters.shouldPassLocalFlights }} != "True" ))
            then
                echo "Local flights boolean set to false, no need to check for RC version."
            else
                echo "Pass local flights boolean set to true, checking RC in version..."
                if [[ ${{ parameters.broker4jVersion }} == *"RC"* ]]
                then
                    echo "Version ${{ parameters.broker4jVersion }} contains RC, push local flights"
                    echo "##vso[task.setvariable variable=localFlightsVar;]${{ parameters.localFlightsParamString }}"
                else
                    echo "RC tag not found in Broker4j Version ${{ parameters.broker4jVersion }}"
                    exit 1
                fi
            fi
      - task: Gradle@3
        displayName: Build ${{ parameters.project }}
        inputs:
          tasks: ${{ parameters.project }}:${{ parameters.assembleCmd}} ${{ parameters.assembleParams}} -PlocalFlights=$(localFlightsVar)
        env:
          ${{ parameters.vstsMvnAndroidUsername }}: $(AndroidAuthClient-Internal-Maven-Username)
          ${{ parameters.vstsMvnAndroidAccessToken }}: $(System.AccessToken)
      - task: Gradle@3
        displayName: Generate Lockfile ${{ parameters.project }}
        inputs:
          tasks: -q ${{ parameters.project }}:dependencies ${{ parameters.dependencyParams }}
        env:
          ${{ parameters.vstsMvnAndroidUsername }}: $(AndroidAuthClient-Internal-Maven-Username)
          ${{ parameters.vstsMvnAndroidAccessToken }}: $(System.AccessToken)
      - task: Gradle@3
        condition: |
          and
          (
            not(failed()),
            not(canceled()),
            or( eq(${{ parameters.shouldPublish }}, 'True'), eq( variables['Build.Reason'], 'Schedule'))
          )
        displayName: Publish ${{ parameters.project }}
        inputs:
          tasks: ${{ parameters.project }}:${{ parameters.publishCmd}} ${{ parameters.publishParams}}
        env:
          ${{ parameters.vstsMvnAndroidUsername }}: $(AndroidAuthClient-Internal-Maven-Username)
          ${{ parameters.vstsMvnAndroidAccessToken }}: $(System.AccessToken)
      - task: ComponentGovernanceComponentDetection@0
        inputs:
          sourceScanPath: $(Build.SourcesDirectory)/${{ parameters.project }}/gradle/dependency-locks/
  - job: RunUnitTest${{ parameters.project }}
    displayName: ${{ parameters.project }} UnitTest
    pool:
      vmImage: ubuntu-latest
      variables:
        - group: AndroidAuthClientVariables
    steps:
      - checkout: ${{ parameters.repository }}
        persistCredentials: True
      - task: AzureKeyVault@2
        displayName: 'Get Key vault AndroidAutomationRunnerAppSecret'
        inputs:
          azureSubscription: 'MSIDLABS_ANDROID_KV'
          KeyVaultName: 'ADALTestInfo'
          SecretsFilter: 'AndroidAutomationRunnerAppSecret'
          RunAsPreJob: false
      - task: Gradle@3
        displayName: Run Test ${{ parameters.project }}
        enabled: ${{ parameters.shouldRunUnitTests }}
        continueOnError: true
        inputs:
          tasks: ${{ parameters.project }}:${{ parameters.testCmd}} ${{ parameters.assembleParams}} -Psugar=true -PlabSecret=$(AndroidAutomationRunnerAppSecret) -PshouldSkipLongRunningTest=true -PcodeCoverageEnabled=true
          testRunTitle: '${{ parameters.project }}_UnitTests'
        env:
          ${{ parameters.vstsMvnAndroidUsername }}: $(AndroidAuthClient-Internal-Maven-Username)
          ${{ parameters.vstsMvnAndroidAccessToken }}: $(System.AccessToken)
      - task: PublishCodeCoverageResults@1
        displayName: Publish Code Coverage Report
        inputs:
          summaryFileLocation: '$(Build.SourcesDirectory)/${{ parameters.project }}/build/reports/jacoco/${{ parameters.testCmd }}/${{ parameters.testCmd }}.xml'
          reportDirectory: '$(Build.SourcesDirectory)/${{ parameters.project }}/build/reports/jacoco/${{ parameters.testCmd }}/html'
