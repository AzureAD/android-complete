# File: azure-pipelines/continuous-delivery/auth-client-android-dev.yml
# Description: Assemble & publish dev builds of auth client android sdk libraries to internal maven feed
#  Libraries include common4j, common, broker4j, linux broker, broker, msal and adal
# Variable: 'mvnUserName' user name to access internal maven feed
# Variable: 'mvnAccessToken' access token to access internal maven feed

name: 0.0.$(Date:yyyyMMdd)-dev$(Rev:.r) # $(Build.BuildNumber) = name

pr: none
trigger: none

schedules:
  - cron: "0 6 * * 1-6" # 6:00 AM UTC everyday Mon-Sat
    displayName: Auth Client Android SDK dev build
    branches:
      include:
      - master
    always: true

resources:
  repositories:
    - repository: common
      type: github
      name: AzureAD/microsoft-authentication-library-common-for-android
      ref: dev
      endpoint: ANDROID_GITHUB
    - repository: broker
      type: github
      name: AzureAD/ad-accounts-for-android
      ref: dev
      endpoint: ANDROID_GITHUB
    - repository: msal
      type: github
      name: AzureAD/microsoft-authentication-library-for-android
      ref: dev
      endpoint: ANDROID_GITHUB
    - repository: adal
      type: github
      name: AzureAD/azure-activedirectory-library-for-android
      ref: dev
      endpoint: ANDROID_GITHUB

parameters:
  - name: customVersionNumber
    displayName: Version Number
    type: string
    default: Default

variables:
  ${{ if eq(parameters.customVersionNumber, 'Default') }}:  
    versionNumber: $(Build.BuildNumber)
  ${{ else }}:
    versionNumber:  ${{ parameters.customVersionNumber }}
  projVersionParam: -PprojVersion=$(versionNumber)
  labApiUtilitiesVersionParam: -PdistLabApiUtilitiesVersion=$(versionNumber)
  common4jVersionParam: -PdistCommon4jVersion=$(versionNumber)
  broker4jVersionParam: -PdistBroker4jVersion=$(versionNumber)
  commonVersionParam: -PdistCommonVersion=$(versionNumber)
  linuxBrokerVersion: -PlinuxBrokerVersion=$(versionNumber)
  androidProjectDependencyParam: --configuration=distReleaseRuntimeClasspath --write-locks
  javaProjectDependencyParam: --configuration=runtimeClasspath --write-locks

stages:
# :LabApiUtilities - Build and publish
- stage: 'publishLabApiUtilitiesLibraries'
  displayName: LabApiUtilities - Build and publish
  jobs:
  - template: assemble&publish.yml
    parameters:
      repository: common
      project: LabApiUtilities
      dependencyParams: $(javaProjectDependencyParam)
      assembleParams: $(projVersionParam)
      publishParams: $(projVersionParam)
      vstsMvnAndroidUsername: ENV_VSTS_MVN_ANDROIDCOMMON_USERNAME
      vstsMvnAndroidAccessToken: ENV_VSTS_MVN_ANDROIDCOMMON_ACCESSTOKEN
# Common4j - Build and publish
- stage: 'publishCommon4jLibraries'
  displayName: Common4j - Build and publish
  dependsOn: []    # this removes the implicit dependency on previous stage and causes this to run in parallel
  jobs:
  - template: assemble&publish.yml
    parameters:
      repository: common
      project: common4j
      dependencyParams: $(javaProjectDependencyParam)
      assembleParams: $(projVersionParam)
      publishParams: $(projVersionParam)
      vstsMvnAndroidUsername: ENV_VSTS_MVN_ANDROIDCOMMON_USERNAME
      vstsMvnAndroidAccessToken: ENV_VSTS_MVN_ANDROIDCOMMON_ACCESSTOKEN
# Common - Build and publish
- stage: 'publishCommonLibraries'
  displayName: Common - Build and publish
  dependsOn: publishCommon4jLibraries
  jobs:
  - template: assemble&publish.yml
    parameters:
      repository: common
      project: common
      assembleCmd: assembleDist
      publishCmd: publishDistReleasePublicationToVsts-maven-adal-androidRepository
      dependencyParams:  $(common4jVersionParam) $(androidProjectDependencyParam)
      assembleParams: $(projVersionParam) $(common4jVersionParam)
      publishParams: $(projVersionParam) $(common4jVersionParam)
      vstsMvnAndroidUsername: ENV_VSTS_MVN_ANDROIDCOMMON_USERNAME
      vstsMvnAndroidAccessToken: ENV_VSTS_MVN_ANDROIDCOMMON_ACCESSTOKEN
# Broker4j - Build and publish
- stage: 'publishBroke4jLibraries'
  displayName: Broker4j - Build and publish
  dependsOn: 
  - publishLabApiUtilitiesLibraries
  - publishCommon4jLibraries
  jobs:
  - template: assemble&publish.yml
    parameters:
      repository: broker
      project: broker4j
      publishCmd: publishAarPublicationToVsts-maven-adal-androidRepository
      dependencyParams: $(common4jVersionParam) $(javaProjectDependencyParam)
      assembleParams: $(projVersionParam) $(common4jVersionParam) $(labApiUtilitiesVersionParam)
      publishParams: $(projVersionParam) $(common4jVersionParam) $(labApiUtilitiesVersionParam)
      vstsMvnAndroidUsername: ENV_VSTS_MVN_ANDROIDADACCOUNTS_USERNAME
      vstsMvnAndroidAccessToken: ENV_VSTS_MVN_ANDROIDADACCOUNTS_ACCESSTOKEN
# Broker - Build and publish
- stage: 'publishBrokerLibraries'
  displayName: Android Broker - Build and publish
  dependsOn: 
  - publishCommonLibraries
  - publishBroke4jLibraries
  jobs:
  - template: assemble&publish.yml
    parameters:
      repository: broker
      project: AADAuthenticator
      assembleCmd: assembleDist
      publishCmd: publishAdAccountsPublicationToVsts-maven-adal-androidRepository
      dependencyParams: $(broker4jVersionParam) $(commonVersionParam) $(androidProjectDependencyParam)
      assembleParams: $(projVersionParam) $(broker4jVersionParam) $(commonVersionParam)
      publishParams: $(projVersionParam) $(broker4jVersionParam) $(commonVersionParam)
      vstsMvnAndroidUsername: ENV_VSTS_MVN_ANDROIDADACCOUNTS_USERNAME
      vstsMvnAndroidAccessToken: ENV_VSTS_MVN_ANDROIDADACCOUNTS_ACCESSTOKEN
# Linux Broker - Build and publish
- stage: 'publishLinuxBrokeLibraries'
  displayName: Linux Broker - Build and publish
  dependsOn: 
  - publishCommon4jLibraries
  - publishBroke4jLibraries
  jobs:
  - template: assemble&publish.yml
    parameters:
      repository: broker
      project: LinuxBroker
      publishCmd: publishAarPublicationToVsts-maven-adal-androidRepository
      dependencyParams: $(broker4jVersionParam) $(common4jVersionParam) $(javaProjectDependencyParam)
      assembleParams: $(projVersionParam) $(broker4jVersionParam) $(common4jVersionParam)
      publishParams: $(projVersionParam) $(broker4jVersionParam) $(common4jVersionParam)
      vstsMvnAndroidUsername: ENV_VSTS_MVN_ANDROIDADACCOUNTS_USERNAME
      vstsMvnAndroidAccessToken: ENV_VSTS_MVN_ANDROIDADACCOUNTS_ACCESSTOKEN
  - job: PublishLinuxBrokerPackage
    dependsOn: publishLinuxBrokerLibraries
    displayName: Publish Linux Broker Package
    pool:
      vmImage: ubuntu-latest
    variables:
    - group: AndroidAuthClientVariables
    steps:
    - checkout: broker
      persistCredentials: True
    - task: Gradle@3
      displayName: Build and publish linux broker package
      env:
        ENV_VSTS_MVN_ANDROIDADACCOUNTS_USERNAME: $(AndroidAuthClient-Internal-Maven-Username)
        ENV_VSTS_MVN_ANDROIDADACCOUNTS_ACCESSTOKEN: $(AndroidAuthClient-Internal-Maven-Access-Token)
      inputs:
        cwd: $(Build.SourcesDirectory)/broker-java-root
        tasks: LinuxBrokerPackage:clean LinuxBrokerPackage:buildDeb $(linuxBrokerVersion) --build-cache --info
        publishJUnitResults: false
        jdkArchitecture: x86
        sqAnalysisBreakBuildIfQualityGateFailed: false
    - task: CopyFiles@2
      name: CopyFiles1
      displayName: Copy Files to Artifact Staging Directory
      inputs:
        SourceFolder: LinuxBrokerPackage/build/distributions
        TargetFolder: $(build.artifactstagingdirectory)
    - task: PublishPipelineArtifact@1
      name: PublishPipelineArtifacts1
      displayName: 'Publish Artifact: LinuxBrokerPackage Linux Test App Deb'
      inputs:
        ArtifactName: LinuxBrokerPackage Deb Package
        TargetPath: $(build.artifactstagingdirectory)
# Msal - Build and publish      
- stage: 'publishMsal'
  displayName: Msal - Build and publish
  dependsOn: publishCommonLibraries
  jobs:
  - template: assemble&publish.yml
    parameters:
      repository: msal
      project: msal
      assembleCmd: assembleDistRelease
      publishCmd: publishMsalPublicationToVsts-maven-adal-androidRepository 
      dependencyParams: $(commonVersionParam) $(androidProjectDependencyParam)
      assembleParams: $(projVersionParam) $(commonVersionParam)
      publishParams: $(projVersionParam) $(commonVersionParam)
      vstsMvnAndroidUsername: ENV_VSTS_MVN_ANDROID_MSAL_USERNAME
      vstsMvnAndroidAccessToken: ENV_VSTS_MVN_ANDROID_MSAL_ACCESSTOKEN
# Adal - Build and publish
- stage: 'publishAdal'
  displayName: Adal - Build and publish
  dependsOn: publishCommonLibraries
  jobs:
  - template: assemble&publish.yml
    parameters:
      repository: adal
      project: adal
      assembleCmd: assembleDist
      publishCmd: publishAdalPublicationToVsts-maven-adal-androidRepository 
      dependencyParams: $(commonVersionParam) $(androidProjectDependencyParam)
      assembleParams: $(projVersionParam) $(commonVersionParam)
      publishParams: $(projVersionParam) $(commonVersionParam)
      vstsMvnAndroidUsername: ENV_VSTS_MVN_ANDROIDADAL_USERNAME
      vstsMvnAndroidAccessToken: ENV_VSTS_MVN_ANDROIDADAL_ACCESSTOKEN
# BrokerApk - Queue pipeline
- stage: 'queueBrokerApkPipeline'
  displayName: Broker Apk Generation
  dependsOn:
    - publishMsal
    - publishAdal
    - publishCommonLibraries
    - publishBrokerLibraries
  jobs:
    - job: queue_build
      displayName: BrokerApk - Trigger pipelines
      steps:
        - checkout: self
          persistCredentials: True
        - task: PowerShell@2
          displayName: Queue and wait for Authenticator Apk generation pipeline
          inputs:
            filePath: '$(Build.SourcesDirectory)/azure-pipelines/scripts/queue-build.ps1'
            arguments: '-OrganizationUrl "https://msazure.visualstudio.com/" -Project "One" -PipelinePAT "$(pipelinepat)" -BuildDefinitionId "237369" -PipelineVariablesJson "{ ''AdAccountsVersion'': ''$(Build.BuildNumber)'', ''CommonVersion'': ''$(Build.BuildNumber)'', ''MsalVersion'': ''$(Build.BuildNumber)'', ''AdalVersion'': ''$(Build.BuildNumber)'' }" -Branch "broker/continuous-integration"'
            workingDirectory: '$(Build.SourcesDirectory)'
  # Broker - E2E Automation
- stage: 'runBrokerE2EAutomation'
  displayName: Broker Automation Run
  dependsOn: queueBrokerApkPipeline
  jobs:
    - job: trigger_automation
      displayName: Trigger Broker Automation Run
      steps:
        - checkout: self
          persistCredentials: True
        - task: PowerShell@2
          displayName: Queue and wait for Broker E2E Automation pipeline
          inputs:
            filePath: '$(Build.SourcesDirectory)\azure-pipelines\scripts\queue-build.ps1'
            arguments: '-OrganizationUrl "https://identitydivision.visualstudio.com/" -Project "Engineering" -PipelinePAT "$env:SYSTEM_ACCESSTOKEN" -BuildDefinitionId "1490" -PipelineVariablesJson "{ ''var1'': ''$(Build.BuildNumber)'', ''var2'': ''val2'' }" -Branch "master"'
            workingDirectory: '$(Build.SourcesDirectory)'
          env:
            SYSTEM_ACCESSTOKEN: $(System.AccessToken)
...
