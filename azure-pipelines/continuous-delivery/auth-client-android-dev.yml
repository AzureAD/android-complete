# File: azure-pipelines/continuous-delivery/auth-client-android-dev.yml
# Description: Assemble & publish dev builds of auth client android sdk libraries to internal maven feed
#  Libraries include common4j, common, broker4j, linux broker, broker, msal and adal
# Variable: 'mvnUserName' user name to access internal maven feed
# Variable: 'mvnAccessToken' access token to access internal maven feed
# Variable: 'MSAL_LTW_Branch' MSAL branch to be passed to LTW UI Automation
# Variable: 'Broker_LTW_Branch' Broker Branch to be passed to LTW UI Automation
# Variable: 'nameSuffix' suffix to distinguish build names between pipelines

name: 1.0.$(Date:yyyyMMdd)-dev$(nameSuffix)$(Rev:.r) # $(Build.BuildNumber) = name

pr: none
trigger: none

schedules:
  - cron: "0 6 * * 1-6" # 6:00 AM UTC everyday Mon-Sat
    displayName: Auth Client Android SDK dev build
    branches:
      include:
      - master
    always: true

resources:
  repositories:
    - repository: common
      type: github
      name: AzureAD/microsoft-authentication-library-common-for-android
      ref: dev
      endpoint: ANDROID_GITHUB
    - repository: broker
      type: github
      name: AzureAD/ad-accounts-for-android
      ref: dev
      endpoint: ANDROID_GITHUB
    - repository: msal
      type: github
      name: AzureAD/microsoft-authentication-library-for-android
      ref: dev
      endpoint: ANDROID_GITHUB
    - repository: adal
      type: github
      name: AzureAD/azure-activedirectory-library-for-android
      ref: dev
      endpoint: ANDROID_GITHUB
    - repository: azuresample
      type: github
      name: Azure-Samples/ms-identity-android-java
      ref: master
      endpoint: ANDROID_GITHUB

parameters:
  - name: customVersionNumber
    displayName: Version Number
    type: string
    default: Default
  - name: shouldRunUiValidation
    displayName: Run E2E UI Validation?
    type: boolean
    default: False
  - name: shouldRunUnitTests
    displayName: Run Unit Tests?
    type: boolean
    default: True
  - name: shouldRunInstrumentedTests
    displayName: Run Instrumented Tests?
    type: boolean
    default: True
  - name: shouldPublishLibraries
    displayName: Publish Libraries?
    type: boolean
    default: True
  - name: shouldEnableBrokerSelectionAndDiscoveryFlag
    displayName: Should enable broker selection & discovery?
    type: boolean
    default: False
  - name: msalTestTarget
    displayName: Test Targets for MSAL
    type: string
    default: package com.microsoft.identity.client.msal.automationapp.testpass.broker, package com.microsoft.identity.client.msal.automationapp.testpass.msalonly, notAnnotation org.junit.Ignore, notAnnotation com.microsoft.identity.client.ui.automation.annotations.FailsWithDailyVersions, notAnnotation com.microsoft.identity.client.ui.automation.annotations.DoNotRunOnPipeline
  - name: brokerTestTarget
    displayName: Test Targets for Broker
    type: string
    default: package com.microsoft.identity.client.broker.automationapp.testpass, notAnnotation org.junit.Ignore, notAnnotation com.microsoft.identity.client.ui.automation.annotations.FailsWithDailyVersions, notAnnotation com.microsoft.identity.client.ui.automation.annotations.DoNotRunOnPipeline

variables:
  ${{ if eq(parameters.customVersionNumber, 'Default') }}:
    versionNumber: $(Build.BuildNumber)
    brokerVersionNumber: $[replace(variables['build.buildnumber'], '1.0.', '8.1.')]
  ${{ else }}:
    versionNumber:  ${{ parameters.customVersionNumber }}
    brokerVersionNumber: $[replace('${{ parameters.customVersionNumber }}', '1.0.', '8.1.')]
  projVersionParam: -PprojVersion=$(versionNumber)
  common4jVersionParam: -PdistCommon4jVersion=$(versionNumber)
  broker4jVersionParam: -PdistBroker4jVersion=$(versionNumber)
  commonVersionParam: -PdistCommonVersion=$(versionNumber)
  linuxBrokerVersion: -PlinuxBrokerVersion=$(versionNumber)
  androidProjectDependencyParam: --configuration=distReleaseRuntimeClasspath --write-locks
  javaProjectDependencyParam: --configuration=runtimeClasspath --write-locks
  authenticatorPipelineId: 237369
  authenticatorApkVersion: "*1"
  companyPortalPipelineId: 237827
  companyPortalApkVersion: "*1"
  ltwPipelineId: 44201
  rawLtwPipelineBuildNumber: "1.23092.400.0.UserCreated"
  brokerAutomationPipelineId: 1490
  ${{ if parameters.shouldEnableBrokerSelectionAndDiscoveryFlag }}:
    enableBrokerSelectionParam: -PbrokerSelectionEnabledFlag
    enableBrokerDiscoveryParam: -PnewBrokerDiscoveryEnabledFlag
  ${{ else }}:
    enableBrokerSelectionParam: ''
    enableBrokerDiscoveryParam: ''
  brokerHostPackageVersionCounter: $[counter(1, 10000)]

stages:
- stage: 'addTags'
  displayName: Tag Pipeline
  dependsOn: []
  variables:
    - name: flightsTag
      value: $[replace(variables['broker4j_flights'], ':', ' ')]
  jobs:
  - job: addTags
    displayName: Add tags for flights
    steps:
    - task: PowerShell@2
      displayName: Run Tagging Script
      inputs:
        targetType: inline
        script: |
          Write-Host "##vso[build.addbuildtag]Android_Broker_Version_$(brokerVersionNumber)"
          Write-Host "##vso[build.addbuildtag]Other_Library_Versions_$(versionNumber)"
          Write-Host "##vso[build.addbuildtag]Flags_$(enableBrokerDiscoveryParam)_$(enableBrokerSelectionParam)_$(broker4j_extra_flags)"
          Write-Host "##vso[build.addbuildtag]Flights_$(flightsTag)"
# Common4j - Build and publish
- stage: 'publishCommon4jLibraries'
  displayName: Common4j - Build and publish
  dependsOn: []    # this removes the implicit dependency on previous stage and causes this to run in parallel
  jobs:
  - template: assemble&publish.yml
    parameters:
      repository: common
      project: common4j
      testCmd: common4jUnitTestCoverageReport
      dependencyParams: $(javaProjectDependencyParam)
      assembleParams: $(projVersionParam)
      testParams: $(projVersionParam) -Psugar=true -PlabSecret=$(AndroidAutomationRunnerAppSecret) -PshouldSkipLongRunningTest=true -PcodeCoverageEnabled=true
      publishParams: $(projVersionParam)
      vstsMvnAndroidUsername: ENV_VSTS_MVN_ANDROIDCOMMON_USERNAME
      vstsMvnAndroidAccessToken: ENV_VSTS_MVN_ANDROIDCOMMON_ACCESSTOKEN
      shouldPublish: ${{ parameters.shouldPublishLibraries }}
      shouldRunUnitTests: ${{ parameters.shouldRunUnitTests }}
      shouldRunInstrumentedTests: ${{ parameters.shouldRunInstrumentedTests }}
# Common - Build and publish
- stage: 'publishCommonLibraries'
  displayName: Common - Build and publish
  dependsOn: publishCommon4jLibraries
  jobs:
  - template: assemble&publish.yml
    parameters:
      repository: common
      project: common
      assembleCmd: assembleDist
      testCmd: distDebugCommonUnitTestCoverageReport
      publishCmd: publish
      dependencyParams:  $(common4jVersionParam) $(androidProjectDependencyParam)
      assembleParams: $(projVersionParam) $(common4jVersionParam) $(enableBrokerDiscoveryParam)
      testParams: $(projVersionParam) $(common4jVersionParam) -Psugar=true -PlabSecret=$(AndroidAutomationRunnerAppSecret) -PshouldSkipLongRunningTest=true -PcodeCoverageEnabled=true $(enableBrokerDiscoveryParam)
      publishParams: $(projVersionParam) $(common4jVersionParam) $(enableBrokerDiscoveryParam)
      vstsMvnAndroidUsername: ENV_VSTS_MVN_ANDROIDCOMMON_USERNAME
      vstsMvnAndroidAccessToken: ENV_VSTS_MVN_ANDROIDCOMMON_ACCESSTOKEN
      shouldPublish: ${{ parameters.shouldPublishLibraries }}
      shouldRunUnitTests: ${{ parameters.shouldRunUnitTests }}
      shouldRunInstrumentedTests: ${{ parameters.shouldRunInstrumentedTests }}
# Broker4j - Build and publish
- stage: 'publishBroke4jLibraries'
  displayName: Broker4j - Build and publish
  dependsOn: 
  - publishCommon4jLibraries
  jobs:
  - template: assemble&publish.yml
    parameters:
      repository: broker
      project: broker4j
      testCmd: broker4jUnitTestCoverageReport
      publishCmd: publishAarPublicationToVsts-maven-adal-androidRepository
      dependencyParams: $(common4jVersionParam) $(javaProjectDependencyParam)
      assembleParams: $(projVersionParam) $(common4jVersionParam) $(broker4j_extra_flags) -PlocalFlights=$(broker4j_flights)
      testParams: $(projVersionParam) $(common4jVersionParam) -Psugar=true -PlabSecret=$(AndroidAutomationRunnerAppSecret) -PshouldSkipLongRunningTest=true -PcodeCoverageEnabled=true $(broker4j_extra_flags) -PlocalFlights=$(broker4j_flights)
      publishParams: $(projVersionParam) $(common4jVersionParam) $(broker4j_extra_flags) -PlocalFlights=$(broker4j_flights)
      vstsMvnAndroidUsername: ENV_VSTS_MVN_ANDROIDADACCOUNTS_USERNAME
      vstsMvnAndroidAccessToken: ENV_VSTS_MVN_ANDROIDADACCOUNTS_ACCESSTOKEN
      shouldPublish: ${{ parameters.shouldPublishLibraries }}
      shouldRunUnitTests: ${{ parameters.shouldRunUnitTests }}
      shouldRunInstrumentedTests: ${{ parameters.shouldRunInstrumentedTests }}
# Broker - Build and publish
- stage: 'publishBrokerLibraries'
  displayName: Android Broker - Build and publish
  variables:
  - group: AndroidAuthClientVariables
  - name : powerLiftApiKeyParam
    value : -PpowerLiftApiKey=$(powerliftApiKey)
  dependsOn: 
  - publishCommonLibraries
  - publishBroke4jLibraries
  jobs:
  - template: assemble&publish.yml
    parameters:
      repository: broker
      project: AADAuthenticator
      assembleCmd: assembleDist
      testCmd: distDebugAADAuthenticatorUnitTestCoverageReport
      publishCmd: publishAdAccountsPublicationToVsts-maven-adal-androidRepository
      dependencyParams: $(broker4jVersionParam) $(commonVersionParam) $(androidProjectDependencyParam)
      assembleParams: -PprojVersion=$(brokerVersionNumber) $(broker4jVersionParam) $(commonVersionParam) $(powerLiftApiKeyParam) $(enableBrokerSelectionParam)
      testParams: -PprojVersion=$(brokerVersionNumber) $(broker4jVersionParam) $(commonVersionParam) $(powerLiftApiKeyParam) $(enableBrokerSelectionParam) -Psugar=true -PlabSecret=$(AndroidAutomationRunnerAppSecret) -PshouldSkipLongRunningTest=true -PcodeCoverageEnabled=true
      publishParams: -PprojVersion=$(brokerVersionNumber) $(broker4jVersionParam) $(commonVersionParam)
      vstsMvnAndroidUsername: ENV_VSTS_MVN_ANDROIDADACCOUNTS_USERNAME
      vstsMvnAndroidAccessToken: ENV_VSTS_MVN_ANDROIDADACCOUNTS_ACCESSTOKEN
      shouldPublish: ${{ parameters.shouldPublishLibraries }}
      agentImage: 1ES-AndroidPool-EOC
      shouldRunUnitTests: ${{ parameters.shouldRunUnitTests }}
      shouldRunInstrumentedTests: ${{ parameters.shouldRunInstrumentedTests }}
# Linux Broker - Build and publish
- stage: 'publishLinuxBrokeLibraries'
  displayName: Linux Broker - Build and publish
  dependsOn: 
  - publishCommon4jLibraries
  - publishBroke4jLibraries
  jobs:
  - template: assemble&publish.yml
    parameters:
      repository: broker
      project: LinuxBroker
      publishCmd: publishAarPublicationToVsts-maven-adal-androidRepository
      testCmd: linuxBrokerUnitTestCoverageReport
      dependencyParams: $(broker4jVersionParam) $(common4jVersionParam) $(javaProjectDependencyParam)
      assembleParams: $(projVersionParam) $(broker4jVersionParam) $(common4jVersionParam)
      publishParams: $(projVersionParam) $(broker4jVersionParam) $(common4jVersionParam)
      vstsMvnAndroidUsername: ENV_VSTS_MVN_ANDROIDADACCOUNTS_USERNAME
      vstsMvnAndroidAccessToken: ENV_VSTS_MVN_ANDROIDADACCOUNTS_ACCESSTOKEN
      shouldPublish: ${{ parameters.shouldPublishLibraries }}
      testParams: $(common4jVersionParam) $(broker4jVersionParam) -PcodeCoverageEnabled=true -PlabSecret=$(AndroidAutomationRunnerAppSecret) -Psystemd_mode_enabled=false --build-cache --info
      shouldRunUnitTests: ${{ parameters.shouldRunUnitTests }}
      shouldRunInstrumentedTests: ${{ parameters.shouldRunInstrumentedTests }}
  - job: PublishLinuxBrokerPackage
    dependsOn: publishLinuxBrokerLibraries
    displayName: Publish Linux Broker Package
    pool:
      vmImage: ubuntu-latest
    variables:
    - group: AndroidAuthClientVariables
    steps:
    - checkout: broker
      persistCredentials: True
    - task: Gradle@3
      displayName: Build and publish linux broker package
      env:
        ENV_VSTS_MVN_ANDROIDADACCOUNTS_USERNAME: $(AndroidAuthClient-Internal-Maven-Username)
        ENV_VSTS_MVN_ANDROIDADACCOUNTS_ACCESSTOKEN: $(System.AccessToken)
      inputs:
        cwd: $(Build.SourcesDirectory)/broker-java-root
        tasks: LinuxBrokerPackage:clean LinuxBrokerPackage:buildDeb $(linuxBrokerVersion) --build-cache --info
        publishJUnitResults: false
        jdkArchitecture: x86
        sqAnalysisBreakBuildIfQualityGateFailed: false
    - task: CopyFiles@2
      name: CopyFiles1
      displayName: Copy Files to Artifact Staging Directory
      inputs:
        SourceFolder: LinuxBrokerPackage/build/distributions
        TargetFolder: $(build.artifactstagingdirectory)
    - task: PublishPipelineArtifact@1
      name: PublishPipelineArtifacts1
      displayName: 'Publish Artifact: LinuxBrokerPackage Linux Test App Deb'
      inputs:
        ArtifactName: LinuxBrokerPackage Deb Package
        TargetPath: $(build.artifactstagingdirectory)
# Msal - Build and publish      
- stage: 'publishMsal'
  displayName: Msal - Build and publish
  dependsOn: publishCommonLibraries
  jobs:
  - template: assemble&publish.yml
    parameters:
      repository: msal
      project: msal
      assembleCmd: assembleDistRelease
      testCmd: distDebugMsalUnitTestCoverageReport
      publishCmd: publishMsalPublicationToVsts-maven-adal-androidRepository 
      dependencyParams: $(commonVersionParam) $(androidProjectDependencyParam)
      assembleParams: $(projVersionParam) $(commonVersionParam)
      testParams: $(projVersionParam) $(commonVersionParam) -Psugar=true -PlabSecret=$(AndroidAutomationRunnerAppSecret) -PshouldSkipLongRunningTest=true -PcodeCoverageEnabled=true
      publishParams: $(projVersionParam) $(commonVersionParam)
      vstsMvnAndroidUsername: ENV_VSTS_MVN_ANDROID_MSAL_USERNAME
      vstsMvnAndroidAccessToken: ENV_VSTS_MVN_ANDROID_MSAL_ACCESSTOKEN
      shouldPublish: ${{ parameters.shouldPublishLibraries }}
      shouldRunUnitTests: ${{ parameters.shouldRunUnitTests }}
      shouldRunInstrumentedTests: ${{ parameters.shouldRunInstrumentedTests }}
# Adal - Build and publish
- stage: 'publishAdal'
  displayName: Adal - Build and publish
  dependsOn: publishCommonLibraries
  jobs:
  - template: assemble&publish.yml
    parameters:
      repository: adal
      project: adal
      assembleCmd: assembleDist
      testCmd: testDistDebugUnitTest
      publishCmd: publishAdalPublicationToVsts-maven-adal-androidRepository 
      dependencyParams: $(commonVersionParam) $(androidProjectDependencyParam)
      assembleParams: $(projVersionParam) $(commonVersionParam)
      testParams: $(projVersionParam) $(commonVersionParam) -Psugar=true -PlabSecret=$(AndroidAutomationRunnerAppSecret) -PshouldSkipLongRunningTest=true -PcodeCoverageEnabled=true
      publishParams: $(projVersionParam) $(commonVersionParam)
      vstsMvnAndroidUsername: ENV_VSTS_MVN_ANDROIDADAL_USERNAME
      vstsMvnAndroidAccessToken: ENV_VSTS_MVN_ANDROIDADAL_ACCESSTOKEN
      shouldPublish: ${{ parameters.shouldPublishLibraries }}
      shouldRunUnitTests: ${{ parameters.shouldRunUnitTests }}
      shouldRunInstrumentedTests: ${{ parameters.shouldRunInstrumentedTests }}

# Promote published packages
- stage: 'promotePackages'
  displayName: Promote published packages
  dependsOn:
    - publishMsal
    - publishAdal
    - publishCommonLibraries
    - publishBrokerLibraries
  jobs:
    - job: promote_packages
      displayName: Promote Packages - Prerelease
      steps:
        - checkout: self
          persistCredentials: True
        - task: PowerShell@2
          displayName: Run script to promote packages - Prerelease
          inputs:
            filePath: '$(Build.SourcesDirectory)/azure-pipelines/scripts/promote-packages.ps1'
            arguments: '-PackagingPAT "$env:SYSTEM_ACCESSTOKEN" -PackageVersion "$(versionNumber)" -adAccountsVersion "$(brokerVersionNumber)"'
            workingDirectory: '$(Build.SourcesDirectory)'
          env:
            SYSTEM_ACCESSTOKEN: $(System.AccessToken)

# BrokerApk - Authenticator Queue pipeline
- stage: 'queueAuthenticatorPipeline'
  variables:
    - group: AndroidAuthClientAutomationSecrets
  displayName: Authenticator Broker Apk Generation
  dependsOn: promotePackages
  jobs:
    - job: queue_build_authenticator
      displayName: Generate Authenticator Apk
      timeoutInMinutes: 120
      steps:
        - checkout: self
          persistCredentials: True
        - task: PowerShell@2
          displayName: Queue and wait for Authenticator Apk generation pipeline
          inputs:
            filePath: '$(Build.SourcesDirectory)/azure-pipelines/scripts/queue-build.ps1'
            arguments: '-OrganizationUrl "https://msazure.visualstudio.com/" -Project "One" -PipelinePAT "$(MSAzure-PAT)" -BuildDefinitionId "$(authenticatorPipelineId)" -PipelineVariablesJson "{ ''AdAccountsVersion'': ''$(brokerVersionNumber)'', ''CommonVersion'': ''$(versionNumber)'', ''MsalVersion'': ''$(versionNumber)'', ''AdalVersion'': ''$(versionNumber)'' }" -Branch "$(authenticatorBranch)"  -BuildNumberOutputOnSuccessVar "authenticatorApkVersion"'
            workingDirectory: '$(Build.SourcesDirectory)'
        - template: ../templates/universal-packages/pull-authenticator-from-feed.yml
          parameters:
            authenticatorVersion: $(authenticatorApkVersion)
# BrokerApk - Company portal Queue pipeline
- stage: 'queueCompanyPortalPipeline'
  variables:
    - group: AndroidAuthClientAutomationSecrets
  displayName: Company Portal Broker Apk Generation
  dependsOn: promotePackages
  jobs:
    - job: queue_build_CompanyPortal
      displayName: Generate CompanyPortal Apk
      timeoutInMinutes: 120
      steps:
        - checkout: self
          persistCredentials: True
        - task: PowerShell@2
          displayName: Queue and wait for Company Portal Apk generation pipeline
          inputs:
            filePath: '$(Build.SourcesDirectory)/azure-pipelines/scripts/queue-build.ps1'
            arguments: '-OrganizationUrl "https://msazure.visualstudio.com/" -Project "Intune" -PipelinePAT "$(MSAzure-PAT)" -WaitTimeoutInMinutes 120 -BuildDefinitionId "$(companyPortalPipelineId)" -PipelineVariablesJson "{ ''AdAccountsVersion'': ''$(brokerVersionNumber)'', ''CommonVersion'': ''$(versionNumber)'', ''MsalVersion'': ''$(versionNumber)''}" -Branch "$(companyPortalBranch)" -BuildNumberOutputOnSuccessVar "companyPortalApkVersion"'
            workingDirectory: '$(Build.SourcesDirectory)'
        - template: ../templates/universal-packages/pull-company-portal-from-feed.yml
          parameters:
            companyPortalVersion: $(companyPortalApkVersion)
# BrokerApk - Link to Windows Queue pipeline
- stage: 'queueLinkToWindowsPipeline'
  variables:
    - group: AndroidAuthClientAutomationSecrets
  displayName: Link To Windows Apk Generation
  dependsOn: promotePackages
  condition: eq(variables['LTWIntegrationEnabled'], 'true')
  jobs:
    - job: queue_build_LinkToWindows
      displayName: Generate Link To Windows Apk
      timeoutInMinutes: 120
      steps:
        - checkout: self
          persistCredentials: True
        - task: PowerShell@2
          displayName: Queue and wait for Link to Windows Apk generation pipeline
          enabled: false
          inputs:
            filePath: '$(Build.SourcesDirectory)/azure-pipelines/scripts/queue-build.ps1'
            arguments: '-OrganizationUrl "https://microsoft.visualstudio.com/" -Project "OS" -PipelinePAT "$(LTW-PAT)" -WaitTimeoutInMinutes 120 -BuildDefinitionId "$(ltwPipelineId)" -PipelineVariablesJson "{ ''AdAccountsVersion'': ''$(brokerVersionNumber)'', ''CommonVersion'': ''$(versionNumber)'', ''MsalVersion'': ''$(versionNumber)'', ''AdalVersion'': ''$(versionNumber)'' }" -Branch "$(LTWBranch)" -BuildReason "UserCreated" -BuildNumberOutputOnSuccessVar "rawLtwPipelineBuildNumber"'
            workingDirectory: '$(Build.SourcesDirectory)'
        - task: PowerShell@2
          displayName: 'Trim LTW build number to get apk version'
          inputs:
            targetType: inline
            script: |
              # LTW pipeline build number is structured like (versionMajor).(versionMinor).(versionBuild).(versionRevision).(build.reason)
              # The version of APK published to feed is (versionMajor).(versionMinor).(versionBuild)
              # We use regex to remove the last two segments so we get the correct version number
              Write-Host "Raw Build Number: $(rawLtwPipelineBuildNumber)"
              $trimmedVersion = "$(rawLtwPipelineBuildNumber)" -replace "\.\d+\.\w+$",""
              Write-Host "Trimmed Version Number: $trimmedVersion"
              Write-Host "##vso[task.setvariable variable=ltwApkVersion;isOutput=true]$trimmedVersion"
            name: ltwVersionScript
        - script: echo "$(ltwVersionScript.ltwApkVersion)"
        - template: ../templates/universal-packages/pull-ltw-from-feed.yml
          parameters:
            LTWVersion: $(ltwApkVersion)

# TestApp generation
- stage: 'testappgeneration'
  dependsOn:
    - publishAdal
    - publishCommonLibraries
    - publishMsal
    - publishBrokerLibraries
    - promotePackages
  displayName: Generate Test Apps
  condition:
    and
    (
    not(failed()),
    not(canceled())
    )
  jobs:
    - template: ../ui-automation/templates/build-azure-sample-app.yml
      parameters:
        productFlavors: Local
        signingConfigurations: Debug
        msalVersion: $(versionNumber)
        packageVariant: RC
    - template: ../ui-automation/templates/build-azure-sample-app-standalone.yml
      parameters:
        signingConfigurations: Debug
        msalVersion: $(versionNumber)
        packageVariant: RC
        continueOnError: True
    - template: ../ui-automation/templates/build-broker-host.yml
      parameters:
        productFlavors: Local
        signingConfigurations: Debug
        msalVersion: $(versionNumber)
        commonVersion: $(versionNumber)
        adAccountsVersion: $(brokerVersionNumber)
        adalVersion: $(versionNumber)
        packageVariant: RC
        flagsParamString: $(broker4j_extra_flags)
        localFlightsParamString: $(broker4j_flights)
        publishToFeed: True
        publishingPackageName: "com.microsoft.identity.testuserapp"
        publishVersion: "1.0.$(brokerHostPackageVersionCounter)"
    - template: ../ui-automation/templates/build-msal-test-app.yml
      parameters:
        productFlavors: Dist
        signingConfigurations: Debug
        msalVersion: $(versionNumber)
        packageVariant: RC
    - template: ../ui-automation/templates/build-adal-test-app.yml
      parameters:
        productFlavors: Dist
        signingConfigurations: Debug
        commonVersion: $(versionNumber)
        adalVersion: $(versionNumber)
        packageVariant: RC

- stage: 'test'
  displayName: test
  dependsOn:
    - testappgeneration
    - queueAuthenticatorPipeline
    - queueCompanyPortalPipeline
    - queueLinkToWindowsPipeline
  jobs:
    - job: test2
      variables:
        toad: $[ stageDependencies.queueLinkToWindowsPipeline.queue_build_LinkToWindows.outputs['ltwVersionScript.ltwApkVersion'] ]
        toad2: $[ stageDependencies.queueLinkToWindowsPipeline.queue_build_LinkToWindows.outputs['ltwVersionScript.nope'] ]
      steps:
        - task: PowerShell@2
          displayName: 'Print ltw version'
          inputs:
            targetType: inline
            script: |
              Write-Host "toad"
              Write-Host "$(toad)"
              Write-Host "$(toad2)"
              Write-Host "LTW: $(ltwApkVersion)"
              Write-Host "CP: $(companyPortalApkVersion)"

# Broker - E2E Automation (NON LTW)
- stage: 'runBrokerE2EAutomation'
  displayName: Broker E2E UI Automation Run
  dependsOn:
    - testappgeneration
    - queueAuthenticatorPipeline
    - queueCompanyPortalPipeline
    - queueLinkToWindowsPipeline
  condition: |
    and
    (
      not(failed()),
      not(canceled()),
      or( eq(${{ parameters.shouldRunUiValidation }}, 'True'), eq( variables['Build.Reason'], 'Schedule'))
    )
  jobs:
    - job: trigger_automation
      displayName: Trigger Broker Automation Run
      timeoutInMinutes: 120
      steps:
        - checkout: self
          persistCredentials: True
        - task: PowerShell@2
          displayName: Queue and wait for Broker E2E Automation pipeline
          continueOnError: true
          inputs:
            filePath: '$(Build.SourcesDirectory)/azure-pipelines/scripts/queue-build.ps1'
            arguments: '-OrganizationUrl "https://identitydivision.visualstudio.com/" -Project "Engineering" -PipelinePAT "$env:SYSTEM_ACCESSTOKEN" -BuildDefinitionId $(brokerAutomationPipelineId) -BuildIdOutputVar "brokerAutomationBuildId" -Branch  "$(Build.SourceBranch)" -PipelineVariablesJson "{ ''dailyVersion'' : ''$(versionNumber)'', ''test_run_prefix'' : ''(Non-LTW) '', ''msalTestTarget'' : ''${{ parameters.msalTestTarget }}, notAnnotation com.microsoft.identity.client.ui.automation.annotations.LTWTests'' , ''brokerTestTarget'' : ''${{ parameters.brokerTestTarget }}, notAnnotation com.microsoft.identity.client.ui.automation.annotations.LTWTests'', ''msal_sdk_version'': ''$(versionNumber)'' }" -TemplateParams "{ ''authenticatorVersion'': ''$(authenticatorApkVersion)'', ''companyPortalVersion'': ''$(companyPortalApkVersion)'',  ''LTWVersion'': ''$(ltwApkVersion)'' }"'
            workingDirectory: '$(Build.SourcesDirectory)'
          env:
            SYSTEM_ACCESSTOKEN: $(System.AccessToken)
        - task: PowerShell@2
          displayName: Import Broker E2E Automation results
          inputs:
            filePath: '$(Build.SourcesDirectory)/azure-pipelines/scripts/import-testResults.ps1'
            arguments: '-AdoPAT "$env:SYSTEM_ACCESSTOKEN" -SourceBuildId $(brokerAutomationBuildId) -TargetBuildId $(Build.BuildId)'
            workingDirectory: '$(Build.SourcesDirectory)'
          env:
            SYSTEM_ACCESSTOKEN: $(System.AccessToken)

# Broker - E2E Automation (LTW)
- stage: 'runBrokerLTWE2EAutomation'
  displayName: Broker LTW E2E UI Automation Run
  dependsOn:
    - testappgeneration
    - queueAuthenticatorPipeline
    - queueCompanyPortalPipeline
    - queueLinkToWindowsPipeline
  condition: |
    and
    (
      not(failed()),
      not(canceled()),
      or( eq(${{ parameters.shouldRunUiValidation }}, 'True'), eq( variables['Build.Reason'], 'Schedule'))
    )
  jobs:
    - job: trigger_automation
      displayName: Trigger Broker Automation Run
      timeoutInMinutes: 120
      steps:
        - checkout: self
          persistCredentials: True
        - task: PowerShell@2
          displayName: Queue and wait for Broker E2E Automation pipeline
          continueOnError: true
          inputs:
            filePath: '$(Build.SourcesDirectory)/azure-pipelines/scripts/queue-build.ps1'
            arguments: '-OrganizationUrl "https://identitydivision.visualstudio.com/" -Project "Engineering" -PipelinePAT "$env:SYSTEM_ACCESSTOKEN" -BuildDefinitionId $(brokerAutomationPipelineId) -BuildIdOutputVar "brokerAutomationBuildId" -Branch  "$(Build.SourceBranch)" -PipelineVariablesJson "{ ''dailyVersion'' : ''$(versionNumber)'', ''test_run_prefix'' : ''(LTW) '', ''msalTestTarget'' : ''${{ parameters.msalTestTarget }}, annotation com.microsoft.identity.client.ui.automation.annotations.LTWTests'', ''brokerTestTarget'' : ''${{ parameters.brokerTestTarget }}, annotation com.microsoft.identity.client.ui.automation.annotations.LTWTests'', ''msal_branch'' : ''$(MSAL_LTW_Branch)'', ''broker_branch'' : ''$(Broker_LTW_Branch)'', ''msal_sdk_version'': ''$(versionNumber)'', ''commonVersion'': ''$(versionNumber)'' }" -TemplateParams "{ ''authenticatorVersion'': ''$(authenticatorApkVersion)'', ''companyPortalVersion'': ''$(companyPortalApkVersion)'',  ''LTWVersion'': ''$(ltwApkVersion)'' }"'
            workingDirectory: '$(Build.SourcesDirectory)'
          env:
            SYSTEM_ACCESSTOKEN: $(System.AccessToken)
        - task: PowerShell@2
          displayName: Import Broker E2E Automation results
          inputs:
            filePath: '$(Build.SourcesDirectory)/azure-pipelines/scripts/import-testResults.ps1'
            arguments: '-AdoPAT "$env:SYSTEM_ACCESSTOKEN" -SourceBuildId $(brokerAutomationBuildId) -TargetBuildId $(Build.BuildId)'
            workingDirectory: '$(Build.SourcesDirectory)'
          env:
            SYSTEM_ACCESSTOKEN: $(System.AccessToken)
...
