# run broker UI automation testcases
# Variable: 'azure_sample_apk' was defined in the Variables tab
# Variable: 'broker_branch' was defined in the Variables tab
# Variable: 'brokerhost_apk' was defined in the Variables tab
# Variable: 'ENV_VSTS_MVN_ANDROIDADACCOUNTS_USERNAME' was defined in the Variables tab
# Variable: 'gCloudProjectId' was defined in the Variables tab
# Variable: 'msal_branch' was defined in the Variables tab
# Variable: 'mvnAccessToken' was defined in the Variables tab
# Variable: 'OfficePAT' was defined in the Variables tab
# Variable: 'msal_sdk_version' was defined in the Variables tab
# https://dev.azure.com/IdentityDivision/Engineering/_build?definitionId=1490&_a=summary
name: $(Build.BuildId)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger: none
pr: none

resources:
  repositories:
  - repository: msal
    type: github
    name: AzureAD/microsoft-authentication-library-for-android
    ref: $(msal_branch)
    endpoint: ANDROID_GITHUB
  - repository: broker
    type: github
    name: AzureAD/ad-accounts-for-android
    ref: $(broker_branch)
    endpoint: ANDROID_GITHUB

variables:
  engineeringProjectId: 'fac9d424-53d2-45c0-91b5-ef6ba7a6bf26'
  oneAuthProjectId: 'a4d3949e-967a-4298-8b6d-53f45f6b0704'
  azureSamplePipelineId: 1458
  brokerHostPipelineId: 1432
  oneAuthTestAppPipelineId: 6332
  msalE2ETestAppPipelineId: 1338
  msazureServiceConnection: AndroidBroker-CI
  msazureFeedName: Android-Broker
  msalApp: msalautomationapp-dist-AutoBroker-debug.apk
  msalTestApp: msalautomationapp-dist-AutoBroker-debug-androidTest.apk
  oneAuthTestApp: app-dist-AutoBroker-release-unsigned.apk
  msalE2ETestApp: msalTestApp-dist-release.apk
  msalAppLocalBrokerHost: msalautomationapp-local-BrokerHost-debug.apk
  msalTestAppLocalBrokerHost: msalautomationapp-local-BrokerHost-debug-androidTest.apk
  brokerApp: brokerautomationapp-dist-AutoBroker-debug.apk
  brokerTestApp: brokerautomationapp-dist-AutoBroker-debug-androidTest.apk
  companyPortalApk: com.microsoft.windowsintune.companyportal-signed.apk
  oldCompanyPortalApk: com.microsoft.windowsintune.companyportal-signed.apk
  authenticatorApk: app-production-universal-release-signed.apk
  oldAuthenticatorApk: Authenticator-4.1.0-RC.apk
  outlookApk: Outlook.apk
  teamsApk: Teams.apk
  wordApk: Word.apk
  edgeApk: Edge.apk
  firebaseTimeout: 45m
  resultsHistoryName: Broker Release
  OSServiceConnection: LTW-Integration
  LTWFeedName: Auth-Broker-Integrated-LTW-Build
  LTWApk: LTW-signed.apk
  oldLTWApk: OldLTW-signed.apk
  oneAuthServiceConnection: OneAuth-Integration
  testAppsFeedName: AndroidADAL
  
parameters:
- name: firebaseDeviceIdHigh
  displayName: Firebase Device Id (Api 30+)
  type: string
  default: oriole
- name: firebaseDeviceAndroidVersionHigh
  displayName: Firebase Device Android Version (Api 30+)
  type: number
  default: 32
- name: firebaseDeviceIdLow
  displayName: Firebase Device Id (Api 29-)
  type: string
  default: blueline
- name: firebaseDeviceAndroidVersionLow
  displayName: Firebase Device Android Version (Api 29-)
  type: number
  default: 28
- name: flankShards
  displayName: Max Number of Flank Shards
  type: number
  default: 2
- name: authenticatorVersion
  displayName: Authenticator Version
  type: string
  default: '*'
- name: oldAuthenticatorVersion
  displayName: Old Authenticator Version
  type: string
  default: '6.2204.2470'
- name: companyPortalVersion
  displayName: Company Portal Version
  type: string
  default: '*'
- name: oldCompanyPortalVersion
  displayName: Old Company Portal Version
  type: string
  default: '5.0.5729'
- name: oldBrokerHostVersion
  displayName: Old Broker host Version
  type: string
  default: '0.0.1'
- name: LTWVersion
  displayName: Link to Windows Version
  type: string
  default: '*'
- name: oldLTWVersion
  displayName: Old Link to Windows Version
  type: string
  default: '1.23051.78'
- name: oldMsalTestAppVersion
  displayName: Old MSAL Test App Version
  type: string
  default: '4.5.0'
- name: oldOneAuthTestAppVersion
  displayName: Old OneAuth Test App Version
  type: string
  default: '0.1118843.20854054'
- name: preInstallLtw
  displayName: Preinstall Link to Windows
  type: boolean
  default: false

stages:
# msalautomationapp
- stage: 'msalautomationapp'
  dependsOn: []    # this removes the implicit dependency on previous stage and causes this to run in parallel
  displayName: Build MSAL Automation APKs
  jobs:
    - template: ./templates/build-msal-automation-app.yml
      parameters:
        brokerApp: AutoBroker
        msalFlavor: Dist
        brokerSource: LocalApk
        brokerUpdateSource: LocalApk
        msalVersion: "0.0.+"
        packageVariant: RC
        preInstallLtw: ${{ parameters.preInstallLtw }}
# msalautomationapplocalbrokerhost
- stage: 'msalautomationapplocalbrokerhost'
  dependsOn: []    # this removes the implicit dependency on previous stage and causes this to run in parallel
  displayName: Build MSAL Automation APKs (LocalBrokerHost)
  jobs:
    - template: ./templates/build-msal-automation-app.yml
      parameters:
        brokerApp: BrokerHost
        msalFlavor: Local
        brokerSource: LocalApk
        brokerUpdateSource: LocalApk
        msalVersion: "0.0.+"
        packageVariant: RC
        preInstallLtw: ${{ parameters.preInstallLtw }}
# brokerautomationapp
- stage: 'brokerautomationapp'
  dependsOn: []    # this removes the implicit dependency on previous stage and causes this to run in parallel
  displayName: Build Broker Automation APKs
  jobs:
    - template: ./templates/build-broker-automation-app.yml
      parameters:
        brokerApp: AutoBroker
        brokerFlavor: Dist
        brokerSource: LocalApk
        adalVersion: "0.0.+"
        commonVersion: "0.0.+"
        preInstallLtw: ${{ parameters.preInstallLtw }}
# TestAppApk - MsalE2ETestApp Queue pipeline
- stage: 'msalE2ETestApp'
  displayName: Build Msal E2E Test App Apk
  dependsOn: []   # this removes the implicit dependency on previous stage and causes this to run in parallel
  jobs:
    - job: queue_build_MsalE2ETestApp
      displayName: Generate Msal E2E Test App Apk
      timeoutInMinutes: 120
      steps:
        - checkout: self
          persistCredentials: True
        - script: echo "The current msal version is $(msal_sdk_version)"
        - task: PowerShell@2
          displayName: Queue and wait for Msal Test App Apk generation pipeline
          name: buildApk
          continueOnError: true
          inputs:
            filePath: '$(Build.SourcesDirectory)/azure-pipelines/scripts/queue-build.ps1'
            arguments: '-OrganizationUrl "https://identitydivision.visualstudio.com/" -Project "Engineering" -PipelinePAT "$env:SYSTEM_ACCESSTOKEN" -WaitTimeoutInMinutes 120 -BuildDefinitionId "$(msalE2ETestAppPipelineId)" -PipelineVariablesJson "{ ''msal_version'': ''$(msal_sdk_version)'' }" -TemplateParams "{''signingConfigurations'': ''Release'', ''productFlavors'': ''Dist''}" -Branch "$(Build.SourceBranch)"'
            workingDirectory: '$(Build.SourcesDirectory)'
          env:
            SYSTEM_ACCESSTOKEN: $(System.AccessToken)
        - task: DownloadPipelineArtifact@2
          displayName: 'Download New Built msal e2e test app'
          inputs:
            buildType: 'specific'
            project: '${{ variables.engineeringProjectId }}'
            definition: '$(msalE2ETestAppPipelineId)'
            artifactName: msalTestApp
            itemPattern: '**/*.apk'
            targetPath: '$(Build.ArtifactStagingDirectory)/msale2etestapp'
            buildVersionToDownload: 'specific'
            pipelineId: '$(buildApk.BrokeBuildId)'
        - publish: $(Build.ArtifactStagingDirectory)/msale2etestapp
          displayName: 'Publish Msal Test apk for later use'
          artifact: msalE2ETestApp
# TestAppApk - OneAuthTestApp Queue pipeline
- stage: 'oneAuthTestApp'
  displayName: Build OneAuth Test App Apk
  dependsOn: []   # this removes the implicit dependency on previous stage and causes this to run in parallel
  jobs:
    - job: queue_build_OneAuthTestApp
      displayName: Generate OneAuth Test App Apk
      timeoutInMinutes: 120
      steps:
        - checkout: self
          persistCredentials: True
        - task: PowerShell@2
          displayName: Queue and wait for OneAuth Test App Apk generation pipeline
          name: buildApk
          continueOnError: true
          inputs:
            filePath: '$(Build.SourcesDirectory)/azure-pipelines/scripts/queue-build.ps1'
            arguments: '-OrganizationUrl "https://office.visualstudio.com/" -Project "OneAuth" -PipelinePAT "$(OfficePAT)" -WaitTimeoutInMinutes 120 -BuildDefinitionId "$(oneAuthTestAppPipelineId)" -TemplateParams "{''androidCommonVersion'': ''$(commonVersion)''}"'
            workingDirectory: '$(Build.SourcesDirectory)'
        - task: DownloadExternalBuildArtifacts@15
          displayName: 'Download OneAuth test app'
          inputs:
            connection: '$(oneAuthServiceConnection)'
            project: '$(oneAuthProjectId)'
            definition: '$(oneAuthTestAppPipelineId)'
            version: '$(buildApk.BrokeBuildId)'
            downloadPath: '$(Build.ArtifactStagingDirectory)'
        - publish: $(Build.ArtifactStagingDirectory)/OneAuthTestApp
          displayName: 'Publish OneAuth Test apk for later use'
          artifact: oneauthtestapp
# Download First Party Apps
- stage: 'firstpartyapps'
  dependsOn: []    # this removes the implicit dependency on previous stage and causes this to run in parallel
  displayName: Download First Party Apps (Outlook, Teams, Word)
  jobs:
    - template: ./templates/download-first-party-apps.yml
# Download Brokers and Azure Sample
- stage: 'brokers_azure_sample'
  dependsOn: []    # this removes the implicit dependency on previous stage and causes this to run in parallel
  displayName: Brokers and Azure Sample APKs
  jobs: 
    - template: ./templates/download-brokers-and-azure-sample.yml
      parameters:
        engineeringProjectId: '$(engineeringProjectId)'
        azureSamplePipelineId: '$(azureSamplePipelineId)'
        msazureServiceConnection: '$(msazureServiceConnection)'
        msazureFeedName: '$(msazureFeedName)'
        OSServiceConnection: '$(OSServiceConnection)'
        LTWFeedName: '$(LTWFeedName)'
        authenticatorVersion: ${{ parameters.authenticatorVersion }}
        oldAuthenticatorVersion: ${{ parameters.oldAuthenticatorVersion }}
        companyPortalVersion: ${{ parameters.companyPortalVersion }}
        oldCompanyPortalVersion: ${{ parameters.oldCompanyPortalVersion }}
        brokerHostPipelineId: '$(brokerHostPipelineId)'
        oldBrokerHostVersion: ${{ parameters.oldBrokerHostVersion }}
        LTWVersion: ${{ parameters.LTWVersion }}
        oldLTWVersion: ${{ parameters.oldLTWVersion }}
# Download Old Test Apps
- stage: 'old_test_apps'
  dependsOn: []    # this removes the implicit dependency on previous stage and causes this to run in parallel
  displayName: Download Old Test Apps
  jobs:
    - template: ./templates/download-old-test-apps.yml
      parameters:
        feedName: '$(testAppsFeedName)'
        oldMsalTestAppVersion: ${{ parameters.oldMsalTestAppVersion }}
        oldOneAuthTestAppVersion: ${{ parameters.oldOneAuthTestAppVersion }}
# MSAL with Broker Test Plan stage (API 30+)
- stage: 'msal_with_broker_high_api'
  dependsOn:
  - msalautomationapp
  - brokers_azure_sample
  - firstpartyapps
  - oneAuthTestApp
  - msalE2ETestApp
  - old_test_apps
  displayName: Running MSAL with Broker Test Plan (API ${{ parameters.firebaseDeviceAndroidVersionHigh }})
  jobs:
    - template: ./templates/flank/run-on-firebase-with-flank.yml
      parameters:
        automationAppApkPath: "$(Pipeline.Workspace)/msalautomationapks-AutoBroker-RC-LocalApk/$(msalApp)"
        automationAppTestApkPath: "$(Pipeline.Workspace)/msalautomationapks-AutoBroker-RC-LocalApk/$(msaltestApp)"
        testTargetPackages: $(msalTestTarget)
        resultsHistoryName: "$(resultsHistoryName)"
        resultsDir: "msalautomationapp-testpass-broker-highapi-$(Build.BuildId)-AndroidBrokerCI"
        otherFiles: "/sdcard/CompanyPortal.apk=$(Pipeline.Workspace)/brokerapks/$(companyPortalApk),\
                      /sdcard/OldCompanyPortal.apk=$(Pipeline.Workspace)/brokerapks/oldAPKs/$(oldCompanyPortalApk),\
                      /sdcard/Authenticator.apk=$(Pipeline.Workspace)/brokerapks/$(authenticatorApk),\
                      /sdcard/LTW.apk=$(Pipeline.Workspace)/brokerapks/$(LTWApk),\
                      /sdcard/OldLTW.apk=$(Pipeline.Workspace)/brokerapks/oldAPKs/$(OldLTWApk),\
                      /sdcard/OldAuthenticator.apk=$(Pipeline.WorkSpace)/brokerapks/oldAPKs/$(oldAuthenticatorApk),\
                      /sdcard/OldMsalTestApp.apk=$(Pipeline.WorkSpace)/oldtestapps/$(msalE2ETestApp),\
                      /sdcard/OldOneAuthTestApp.apk=$(Pipeline.WorkSpace)/oldtestapps/$(oneAuthTestApp),\
                      /sdcard/AzureSample.apk=$(Pipeline.Workspace)/azuresample/$(azure_sample_apk),\
                      /sdcard/BrokerHost.apk=$(Pipeline.WorkSpace)/brokerapks/$(brokerhost_apk),\
                      /sdcard/OneAuthTestApp.apk=$(Pipeline.WorkSpace)/oneauthtestapp/$(oneAuthTestApp),\
                      /sdcard/Edge.apk=$(Pipeline.WorkSpace)/firstpartyapks/$(edgeApk),\
                      /sdcard/MsalTestApp.apk=$(Pipeline.WorkSpace)/msalE2ETestApp/$(msalE2ETestApp)"
        firebaseDeviceId: ${{ parameters.firebaseDeviceIdHigh }}
        firebaseDeviceAndroidVersion: ${{ parameters.firebaseDeviceAndroidVersionHigh }}
        testRunTitle: "Broker(MSAL) UI Automation - Build (API ${{ parameters.firebaseDeviceAndroidVersionHigh }}) # $(Build.BuildNumber)"
        extraTarget: "notAnnotation com.microsoft.identity.client.ui.automation.annotations.RunOnAPI29Minus, notAnnotation com.microsoft.identity.client.ui.automation.annotations.LocalBrokerHostDebugUiTest"
        flankShards: ${{ parameters.flankShards }}
# MSAL with Broker Test Plan stage (BrokerHost Tests) (API 30+)
- stage: 'msal_with_brokerhost_high_api'
  dependsOn:
    - msalautomationapplocalbrokerhost
    - brokers_azure_sample
    - firstpartyapps
    - oneAuthTestApp
    - msalE2ETestApp
    - old_test_apps
  displayName: Running MSAL with Broker Test Plan (BrokerHost Tests) (API ${{ parameters.firebaseDeviceAndroidVersionHigh }})
  jobs:
    - template: ./templates/run-on-firebase.yml
      parameters:
        automationAppApkPath: "$(Pipeline.Workspace)/msalautomationapks-BrokerHost-RC-LocalApk/$(msalAppLocalBrokerHost)"
        automationAppTestApkPath: "$(Pipeline.Workspace)/msalautomationapks-BrokerHost-RC-LocalApk/$(msaltestAppLocalBrokerHost)"
        testTargetPackages: $(msalTestTarget)
        resultsHistoryName: "$(resultsHistoryName)"
        resultsDir: "msalautomationapp-testpass-brokerhost-highapi-$(Build.BuildId)-AndroidBrokerCI"
        otherFiles: "/sdcard/CompanyPortal.apk=$(Pipeline.Workspace)/brokerapks/$(companyPortalApk),\
                      /sdcard/OldCompanyPortal.apk=$(Pipeline.Workspace)/brokerapks/oldAPKs/$(oldCompanyPortalApk),\
                      /sdcard/Authenticator.apk=$(Pipeline.Workspace)/brokerapks/$(authenticatorApk),\
                      /sdcard/LTW.apk=$(Pipeline.Workspace)/brokerapks/$(LTWApk),\
                      /sdcard/OldLTW.apk=$(Pipeline.Workspace)/brokerapks/oldAPKs/$(OldltwApk),\
                      /sdcard/OldAuthenticator.apk=$(Pipeline.WorkSpace)/brokerapks/oldAPKs/$(oldAuthenticatorApk),\
                      /sdcard/OldBrokerHost.apk=$(Pipeline.WorkSpace)/brokerapks/oldAPKs/$(brokerhost_apk),\
                      /sdcard/OldMsalTestApp.apk=$(Pipeline.WorkSpace)/oldtestapps/$(msalE2ETestApp),\
                      /sdcard/OldOneAuthTestApp.apk=$(Pipeline.WorkSpace)/oldtestapps/$(oneAuthTestApp),\
                      /sdcard/AzureSample.apk=$(Pipeline.Workspace)/azuresample/$(azure_sample_apk),\
                      /sdcard/BrokerHost.apk=/home/vsts/work/1/brokerapks/$(brokerhost_apk),\
                      /data/local/tmp/test/DirectPushBrokerHost.apk=/home/vsts/work/1/brokerapks/$(brokerhost_apk),\
                      /data/local/tmp/DirectPushBrokerHost.apk=/home/vsts/work/1/brokerapks/$(brokerhost_apk),\
                      /sdcard/OneAuthTestApp.apk=$(Pipeline.WorkSpace)/oneauthtestapp/$(oneAuthTestApp),\
                      /sdcard/Edge.apk=$(Pipeline.WorkSpace)/firstpartyapks/$(edgeApk),\
                      /sdcard/MsalTestApp.apk=$(Pipeline.WorkSpace)/msalE2ETestApp/$(msalE2ETestApp)"
        firebaseDeviceId: ${{ parameters.firebaseDeviceIdHigh }}
        firebaseDeviceAndroidVersion: ${{ parameters.firebaseDeviceAndroidVersionHigh }}
        testRunTitle: "Broker(MSAL) UI Automation - Build (BrokerHost Tests) (API ${{ parameters.firebaseDeviceAndroidVersionHigh }}) # $(Build.BuildNumber)"
        extraTarget: "notAnnotation com.microsoft.identity.client.ui.automation.annotations.RunOnAPI29Minus, annotation com.microsoft.identity.client.ui.automation.annotations.LocalBrokerHostDebugUiTest"
# MSAL with Broker Test Plan stage (API 29-)
- stage: 'msal_with_broker_low_api'
  dependsOn:
    - msalautomationapp
    - brokers_azure_sample
    - firstpartyapps
    - oneAuthTestApp
    - msalE2ETestApp
    - old_test_apps
  displayName: Running MSAL with Broker Test Plan (API ${{ parameters.firebaseDeviceAndroidVersionLow }})
  jobs:
    - template: ./templates/run-on-firebase.yml
      parameters:
        automationAppApkPath: "$(Pipeline.Workspace)/msalautomationapks-AutoBroker-RC-LocalApk/$(msalApp)"
        automationAppTestApkPath: "$(Pipeline.Workspace)/msalautomationapks-AutoBroker-RC-LocalApk/$(msaltestApp)"
        testTargetPackages: $(msalTestTarget)
        resultsHistoryName: "$(resultsHistoryName)"
        resultsDir: "msalautomationapp-testpass-broker-lowapi-$(Build.BuildId)-AndroidBrokerCI"
        otherFiles: "/sdcard/CompanyPortal.apk=$(Pipeline.Workspace)/brokerapks/$(companyPortalApk),\
                      /sdcard/OldCompanyPortal.apk=$(Pipeline.Workspace)/brokerapks/oldAPKs/$(oldCompanyPortalApk),\
                      /sdcard/Authenticator.apk=$(Pipeline.Workspace)/brokerapks/$(authenticatorApk),\
                      /sdcard/LTW.apk=$(Pipeline.Workspace)/brokerapks/$(LTWApk),\
                      /sdcard/OldLTW.apk=$(Pipeline.Workspace)/brokerapks/oldAPKs/$(OldltwApk),\
                      /sdcard/OldAuthenticator.apk=$(Pipeline.WorkSpace)/brokerapks/oldAPKs/$(oldAuthenticatorApk),\
                      /sdcard/OldMsalTestApp.apk=$(Pipeline.WorkSpace)/oldtestapps/$(msalE2ETestApp),\
                      /sdcard/OldOneAuthTestApp.apk=$(Pipeline.WorkSpace)/oldtestapps/$(oneAuthTestApp),\
                      /sdcard/AzureSample.apk=$(Pipeline.Workspace)/azuresample/$(azure_sample_apk),\
                      /sdcard/BrokerHost.apk=$(Pipeline.WorkSpace)/brokerapks/$(brokerhost_apk),\
                      /sdcard/Outlook.apk=$(Pipeline.WorkSpace)/firstpartyapks/$(outlookApk),\
                      /sdcard/Teams.apk=$(Pipeline.WorkSpace)/firstpartyapks/$(teamsApk),\
                      /sdcard/Word.apk=$(Pipeline.WorkSpace)/firstpartyapks/$(wordApk),\
                      /sdcard/OneAuthTestApp.apk=$(Pipeline.WorkSpace)/oneauthtestapp/$(oneAuthTestApp),\
                      /sdcard/Edge.apk=$(Pipeline.WorkSpace)/firstpartyapks/$(edgeApk),\
                      /sdcard/MsalTestApp.apk=$(Pipeline.WorkSpace)/msalE2ETestApp/$(msalE2ETestApp)"
        firebaseDeviceId: ${{ parameters.firebaseDeviceIdLow }}
        firebaseDeviceAndroidVersion: ${{ parameters.firebaseDeviceAndroidVersionLow }}
        testRunTitle: "Broker(MSAL) UI Automation - Build (API ${{ parameters.firebaseDeviceAndroidVersionLow }}) # $(Build.BuildNumber)"
        extraTarget: "annotation com.microsoft.identity.client.ui.automation.annotations.RunOnAPI29Minus"
# ADAL with Broker (API 30+)
- stage: 'adal_with_broker_high_api'
  dependsOn:
  - brokerautomationapp
  - brokers_azure_sample
  - firstpartyapps
  displayName: ADAL with broker and Broker basic validation test plan (API ${{ parameters.firebaseDeviceAndroidVersionHigh }})
  jobs:
    - template: ./templates/flank/run-on-firebase-with-flank.yml
      parameters:
        automationAppApkPath: "$(Pipeline.Workspace)/brokerautomationapks/$(brokerApp)"
        automationAppTestApkPath: "$(Pipeline.Workspace)/brokerautomationapks/$(brokertestApp)"
        testTargetPackages: $(brokerTestTarget)
        resultsHistoryName: "$(resultsHistoryName)"
        resultsDir: "brokerautomationapp-testpass-adal&basic-highapi-$(Build.BuildId)-AndroidBrokerCI"
        otherFiles: "/sdcard/CompanyPortal.apk=$(Pipeline.Workspace)/brokerapks/$(companyPortalApk),\
                      /sdcard/OldCompanyPortal.apk=$(Pipeline.Workspace)/brokerapks/oldAPKs/$(oldCompanyPortalApk),\
                      /sdcard/Authenticator.apk=$(Pipeline.Workspace)/brokerapks/$(authenticatorApk),\
                      /sdcard/LTW.apk=$(Pipeline.Workspace)/brokerapks/$(LTWApk),\
                      /sdcard/OldLTW.apk=$(Pipeline.Workspace)/brokerapks/oldAPKs/$(OldltwApk),\
                      /sdcard/OldAuthenticator.apk=$(Pipeline.WorkSpace)/brokerapks/oldAPKs/$(oldAuthenticatorApk),\
                      /sdcard/AzureSample.apk=$(Pipeline.Workspace)/azuresample/$(azure_sample_apk),\
                      /sdcard/BrokerHost.apk=$(Pipeline.WorkSpace)/brokerapks/$(brokerhost_apk),\
                      /sdcard/Outlook.apk=$(Pipeline.WorkSpace)/firstpartyapks/$(outlookApk),\
                      /sdcard/Teams.apk=$(Pipeline.WorkSpace)/firstpartyapks/$(teamsApk),\
                      /sdcard/Word.apk=$(Pipeline.WorkSpace)/firstpartyapks/$(wordApk),\
                      /sdcard/Edge.apk=$(Pipeline.WorkSpace)/firstpartyapks/$(edgeApk)"
        firebaseDeviceId: ${{ parameters.firebaseDeviceIdHigh }}
        firebaseDeviceAndroidVersion: ${{ parameters.firebaseDeviceAndroidVersionHigh }}
        testRunTitle: "Broker(ADAL) UI Automation - Build (API ${{ parameters.firebaseDeviceAndroidVersionHigh }}) # $(Build.BuildNumber)"
        extraTarget: "notAnnotation com.microsoft.identity.client.ui.automation.annotations.RunOnAPI29Minus"
        flankShards: ${{ parameters.flankShards }}
