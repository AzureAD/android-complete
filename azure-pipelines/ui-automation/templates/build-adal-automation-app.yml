parameters:
  - name: brokerFlavor
    type: string
    default: 'AutoBroker'
    values:
      - BrokerHost
      - BrokerMicrosoftAuthenticator
      - BrokerCompanyPortal
      - AutoBroker
  - name: adalFlavor
    type: string
    default: 'Dist'
    values:
      - Local
      - Dist
  - name: brokerSource
    displayName: Broker App Installation Source
    type: string
    default: LocalApk
    values:
      - LocalApk
      - PlayStore

jobs:
  - job: 'adalautomationapp'
    displayName: Build and Publish ADAL Automation app
    pool:
      vmImage: ubuntu-latest
    steps:
      - checkout: self
        clean: true
        submodules: recursive
        persistCredentials: True
      - bash: |
          echo "##vso[task.setvariable variable=ENV_VSTS_MVN_ANDROIDADACCOUNTS_ACCESSTOKEN]$(mvnAccessToken)"
        displayName: Set MVN Access Token in Environment
      - task: AzureKeyVault@2
        displayName: 'Get Key vault AndroidAutomationRunnerAppSecret'
        inputs:
          azureSubscription: 'MSIDLABS_ANDROID_KV'
          KeyVaultName: 'ADALTestInfo'
          SecretsFilter: 'AndroidAutomationRunnerAppSecret'
          RunAsPreJob: false
      - task: Gradle@2
        displayName: 'Assemble ADAL Automation App'
        inputs:
          tasks: clean brokerautomationapp:assembleDistAutoBrokerDebug -PlabSecret=$(AndroidAutomationRunnerAppSecret) -PbrokerSource=${{ parameters.brokerSource }}
          publishJUnitResults: false
      - task: Gradle@2
        displayName: 'Assemble ADAL Automation App Instrumented Tests'
        inputs:
          tasks: brokerautomationapp:assembleDistAutoBrokerDebugAndroidTest -PlabSecret=$(AndroidAutomationRunnerAppSecret)
          publishJUnitResults: false
      - task: CopyFiles@2
        displayName: 'Copy apks for later use in the pipeline'
        inputs:
          flattenFolders: true
          contents: '$(Build.SourcesDirectory)/brokerautomationapp/build/outputs/apk/**/*.apk'
          targetFolder: '$(Build.ArtifactStagingDirectory)/adal'
      - publish: '$(Build.ArtifactStagingDirectory)/adal'
        displayName: 'Publish apks for later use'
        artifact: adalautomationapks
...
