parameters:
  - name: brokerApp
    type: string
    default: 'AutoBroker'
    values:
      - BrokerHost
      - BrokerMicrosoftAuthenticator
      - BrokerCompanyPortal
      - AutoBroker
  - name: brokerFlavor
    type: string
    default: 'Local'
    values:
      - Local
      - Dist
  - name: brokerSource
    displayName: Broker App Installation Source
    type: string
    default: LocalApk
    values:
      - LocalApk
      - PlayStore
  - name: preinstallLtw
    type: boolean
    default: false

jobs:
- job: brokerautomationapp
  displayName: Build and Publish Broker Automation app
  pool:
    vmImage: ubuntu-latest
  steps:
    - checkout: broker
      clean: true
      submodules: recursive
      persistCredentials: True
    - bash: |
        echo "##vso[task.setvariable variable=ENV_VSTS_MVN_ANDROIDADACCOUNTS_ACCESSTOKEN]$(System.AccessToken)"
      displayName: Set MVN Access Token in Environment
    - bash: |
        echo "##vso[task.setvariable variable=ENV_VSTS_MVN_OFFICE_ACCESSTOKEN]$(vstsOfficeMavenAccessToken)"
      displayName: Set Office MVN Access Token in Environment
    - task: AzureKeyVault@2
      displayName: 'Get Key vault AndroidAutomationRunnerAppSecret'
      inputs:
        azureSubscription: 'MSIDLABS_ANDROID_KV'
        KeyVaultName: 'ADALTestInfo'
        SecretsFilter: 'AndroidAutomationRunnerAppSecret'
        RunAsPreJob: false
    - task: PowerShell@2
      displayName: Generate Assemble Clean Task
      inputs:
        targetType: inline
        script: |
          $assembleTask = clean brokerautomationapp:assemble${{ parameters.brokerFlavor }}${{ parameters.brokerApp }}Debug -PlabSecret=$(AndroidAutomationRunnerAppSecret) -PbrokerSource=${{ parameters.brokerSource }}
          if (${{ parameters.preinstallLtw }} -eq $true) {
              $assembleTask = $assembleTask + " -PpreinstallLtw=true"
          }
          Write-Host "##vso[task.setvariable variable=AssembleTask;]$assembleTask"
    - task: Gradle@2
      displayName: 'Assemble Broker Automation App'
      inputs:
        tasks: $(AssembleTask)
        publishJUnitResults: false
    - task: PowerShell@2
      displayName: Generate Assemble Test Task
      inputs:
        targetType: inline
        script: |
          $assembleTask = brokerautomationapp:assemble${{ parameters.brokerFlavor }}${{ parameters.brokerApp }}DebugAndroidTest -PlabSecret=$(AndroidAutomationRunnerAppSecret)
          if (${{ parameters.preinstallLtw }} -eq $true) {
              $assembleTask = $assembleTask + " -PpreinstallLtw=true"
          }
          Write-Host "##vso[task.setvariable variable=AssembleTestTask;]$assembleTask"
    - task: Gradle@2
      displayName: 'Assemble Broker Automation App Instrumented Tests'
      inputs:
        tasks: $(AssembleTestTask)
        publishJUnitResults: false
    - task: CopyFiles@2
      displayName: 'Copy apks for later use in the pipeline'
      inputs:
        flattenFolders: true
        contents: '$(Build.SourcesDirectory)/brokerautomationapp/build/outputs/apk/**/*.apk'
        targetFolder: '$(Build.ArtifactStagingDirectory)/broker'
    - publish: '$(Build.ArtifactStagingDirectory)/broker'
      displayName: 'Publish apks for later use'
      artifact: brokerautomationapks
