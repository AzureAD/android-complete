parameters:
  - name: engineeringProjectId
    type: string
  - name: msazureServiceConnection
    type: string
  - name: msazureFeedName
    type: string
  - name: authenticatorVersionRC
    displayName: Authenticator Version
    type: string
  - name: authenticatorVersionPROD
    displayName: Authenticator Version
    type: string
  - name: oldAuthenticatorVersion
    displayName: Old Authenticator Version
    type: string
  - name: companyPortalVersionRC
    displayName: Company Portal Version
    type: string
  - name: companyPortalVersionPROD
    displayName: Company Portal Version
    type: string
  - name: brokerHostPipelineId
    type: string
  - name: oldBrokerHostVersion
    displayName: Old Broker host Version
    type: string
  - name: internalFeedName
    type: string
    default: 'AndroidAdal'

jobs:
- job: 'download_brokers'
  displayName: Download Brokers
  pool:
    vmImage: ubuntu-latest
  steps:
    - checkout: none
    - script: mkdir brokers
      displayName: 'make brokers dir'
      workingDirectory: '$(Build.ArtifactStagingDirectory)'
    - task: UniversalPackages@0
      displayName: 'Download com.azure.authenticator RC'
      inputs:
        command: 'download'
        downloadDirectory: '$(Build.ArtifactStagingDirectory)/brokers'
        feedsToUse: 'external'
        externalFeedCredentials: '${{ parameters.msazureServiceConnection }}'
        feedDownloadExternal: '${{ parameters.msazureFeedName }}'
        packageDownloadExternal: 'com.azure.authenticator'
        versionDownloadExternal: '${{ parameters.authenticatorVersionRC }}'
    - task: UniversalPackages@0
        displayName: 'Download com.azure.authenticator PROD'
        inputs:
          command: 'download'
          downloadDirectory: '$(Build.ArtifactStagingDirectory)/brokers/prod'
          feedsToUse: 'external'
          externalFeedCredentials: '${{ parameters.msazureServiceConnection }}'
          feedDownloadExternal: '${{ parameters.msazureFeedName }}'
          packageDownloadExternal: 'com.azure.authenticator'
          versionDownloadExternal: '${{ parameters.authenticatorVersionPROD }}'
    - task: UniversalPackages@0
      displayName: 'Download old authenticator (Pre v5 Broker) version from feed'
      inputs:
        command: 'download'
        downloadDirectory: '$(Build.ArtifactStagingDirectory)/brokers/oldAPKs'
        feedsToUse: 'internal'
        vstsFeed: '${{ parameters.internalFeedName }}'
        vstsFeedPackage: 'com.azure.authenticator'
        vstsPackageVersion: '${{ parameters.oldAuthenticatorVersion }}'
    - task: UniversalPackages@0
      displayName: 'Download com.microsoft.windowsintune.companyportal-signed RC'
      inputs:
        command: 'download'
        downloadDirectory: '$(Build.ArtifactStagingDirectory)/brokers'
        feedsToUse: 'external'
        externalFeedCredentials: '${{ parameters.msazureServiceConnection }}'
        feedDownloadExternal: '${{ parameters.msazureFeedName }}'
        packageDownloadExternal: 'com.microsoft.windowsintune.companyportal-signed'
        versionDownloadExternal: '${{ parameters.companyPortalVersionRC }}'
    - task: UniversalPackages@0
        displayName: 'Download com.microsoft.windowsintune.companyportal-signed PROD'
        inputs:
          command: 'download'
          downloadDirectory: '$(Build.ArtifactStagingDirectory)/brokers/prod'
          feedsToUse: 'external'
          externalFeedCredentials: '${{ parameters.msazureServiceConnection }}'
          feedDownloadExternal: '${{ parameters.msazureFeedName }}'
          packageDownloadExternal: 'com.microsoft.windowsintune.companyportal-signed'
          versionDownloadExternal: '${{ parameters.companyPortalVersionPROD }}'
    - task: DownloadPipelineArtifact@2
      displayName: 'Download Broker Host'
      inputs:
        buildType: specific
        project: '${{ parameters.engineeringProjectId }}'
        definition: '${{ parameters.brokerHostPipelineId }}'
        artifactName: BrokerHost
        itemPattern: '**/*.apk'
        targetPath: '$(Build.ArtifactStagingDirectory)/brokers'
    - task: UniversalPackages@0
      displayName: 'Download old brokerHost version from feed'
      inputs:
        command: 'download'
        downloadDirectory: '$(Build.ArtifactStagingDirectory)/brokers/oldAPKs'
        feedsToUse: 'external'
        externalFeedCredentials: '${{ parameters.msazureServiceConnection }}'
        feedDownloadExternal: '${{ parameters.msazureFeedName }}'
        packageDownloadExternal: 'broker-host'
        versionDownloadExternal: '${{ parameters.oldBrokerHostVersion }}'
    - publish: $(Build.ArtifactStagingDirectory)/brokers
      displayName: 'Publish Authenticator/Company Portal Broker apks for later use'
      artifact: brokerapks
    - publish: $(Build.ArtifactStagingDirectory)/azuresample
      displayName: 'Publish Azure Sample apk for later use'
      artifact: azuresample