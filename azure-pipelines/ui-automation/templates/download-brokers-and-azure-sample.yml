parameters:
  - name: engineeringProjectId
    type: string
  - name: azureSamplePipelineId
    type: string
  - name: msazureServiceConnection
    type: string
  - name: msazureFeedName
    type: string
  - name: authenticatorVersion
    displayName: Authenticator Version
    type: string
  - name: oldAuthenticatorVersion
    displayName: Old Authenticator Version
    type: string
  - name: companyPortalVersion
    displayName: Company Portal Version
    type: string
    default: '*'
  - name: oldCompanyPortalVersion
    displayName: Old Company Portal Version
    type: string
    default: '5.0.5729'
  - name: brokerHostVersion
    displayName: BrokerHost Version
    type: string
    default: '*'
  - name: brokerHostFeedPackageName
    displayName: BrokerHost package feed name
    type: string
    default: 'com.microsoft.identity.testuserapp'
  - name: oldBrokerHostVersion
    displayName: Old Broker host Version
    type: string
  - name: brokerHostWithoutBrokerSelectionLogicVersion
    displayName: brokerHost without broker selection logic version
    type: string
    default: '0.0.4'
  - name: internalFeedName
    type: string
    default: 'AndroidAdal'
  - name: LTWFeedName
    type: string
  - name: OSServiceConnection
    displayName: Link to Windows Service Connection
    type: string
  - name: LTWVersion
    displayName: Link to Windows Version
    type: string
    default: '*'
  - name: oldLTWVersion
    displayName: Old Link to Windows Version
    type: string
    default: '1.23051.78'
jobs:
- job: 'download_brokers'
  displayName: Download Brokers
  pool:
    vmImage: ubuntu-latest
  steps:
    - checkout: none
    - task: DownloadPipelineArtifact@2
      displayName: 'Download latest Azure Sample'
      inputs:
        buildType: 'specific'
        project: '${{ parameters.engineeringProjectId }}'
        definition: '${{ parameters.azureSamplePipelineId }}'
        artifactName: AzureSample
        itemPattern: '**/*.apk'
        targetPath: '$(Build.ArtifactStagingDirectory)/azuresample'
        buildVersionToDownload: 'latest'
    - script: mkdir brokers
      displayName: 'make brokers dir'
      workingDirectory: '$(Build.ArtifactStagingDirectory)'
    - task: UniversalPackages@0
      displayName: 'Download com.azure.authenticator'
      inputs:
        command: 'download'
        downloadDirectory: '$(Build.ArtifactStagingDirectory)/brokers'
        feedsToUse: 'external'
        externalFeedCredentials: '${{ parameters.msazureServiceConnection }}'
        feedDownloadExternal: '${{ parameters.msazureFeedName }}'
        packageDownloadExternal: 'com.azure.authenticator'
        versionDownloadExternal: '${{ parameters.authenticatorVersion }}'
    - task: UniversalPackages@0
      displayName: 'Download old authenticator (Pre v5 Broker) version from feed'
      inputs:
        command: 'download'
        downloadDirectory: '$(Build.ArtifactStagingDirectory)/brokers/oldAPKs'
        feedsToUse: 'internal'
        vstsFeed: '${{ parameters.internalFeedName }}'
        vstsFeedPackage: 'com.azure.authenticator'
        vstsPackageVersion: '${{ parameters.oldAuthenticatorVersion }}'
    - task: UniversalPackages@0
      displayName: 'Download Latest CompanyPortal Apk'
      inputs:
        command: 'download'
        downloadDirectory: '$(Build.ArtifactStagingDirectory)/brokers'
        feedsToUse: 'external'
        externalFeedCredentials: '${{ parameters.msazureServiceConnection }}'
        feedDownloadExternal: '${{ parameters.msazureFeedName }}'
        packageDownloadExternal: 'com.microsoft.windowsintune.companyportal-signed'
        versionDownloadExternal: '${{ parameters.companyPortalVersion }}'
    - task: UniversalPackages@0
      displayName: 'Download Old CompanyPortal Apk'
      inputs:
        command: 'download'
        downloadDirectory: '$(Build.ArtifactStagingDirectory)/brokers/oldAPKs'
        feedsToUse: 'external'
        externalFeedCredentials: '${{ parameters.msazureServiceConnection }}'
        feedDownloadExternal: '${{ parameters.msazureFeedName }}'
        packageDownloadExternal: 'com.microsoft.windowsintune.companyportal-signed'
        versionDownloadExternal: '${{ parameters.oldCompanyPortalVersion }}'
    - task: UniversalPackages@0
      displayName: 'Download Latest LTW Apk'
      inputs:
        command: 'download'
        downloadDirectory: '$(Build.ArtifactStagingDirectory)/brokers'
        feedsToUse: 'external'
        externalFeedCredentials: '${{ parameters.OSServiceConnection }}'
        feedDownloadExternal: '${{ parameters.LTWFeedName }}'
        packageDownloadExternal: 'com.microsoft.appmanager'
        versionDownloadExternal: '${{ parameters.LTWVersion }}'
    - script: mv ./YPC-*.apk ./LTW-signed.apk
      displayName: 'Rename LTW build to LTW-signed.apk'
      workingDirectory: '$(Build.ArtifactStagingDirectory)/brokers'
    - task: UniversalPackages@0
      displayName: 'Download Old LTW Apk'
      inputs:
        command: 'download'
        downloadDirectory: '$(Build.ArtifactStagingDirectory)/brokers/oldAPKs'
        feedsToUse: 'external'
        externalFeedCredentials: '${{ parameters.OSServiceConnection }}'
        feedDownloadExternal: '${{ parameters.LTWFeedName }}'
        packageDownloadExternal: 'com.microsoft.appmanager'
        versionDownloadExternal: '${{ parameters.OldLTWVersion }}'
    - script: mv ./YPC-*.apk ./OldLTW-signed.apk
      displayName: 'Rename Old LTW build to OldLTW-signed.apk'
      workingDirectory: '$(Build.ArtifactStagingDirectory)/brokers/oldAPKs'
    - task: UniversalPackages@0
      displayName: 'Download BrokerHost from Feed'
      inputs:
        command: 'download'
        downloadDirectory: '$(Build.ArtifactStagingDirectory)/brokers'
        feedsToUse: 'internal'
        vstsFeed: '${{ parameters.internalFeedName }}'
        vstsFeedPackage: '${{ parameters.brokerHostFeedPackageName }}'
        vstsPackageVersion: '${{ parameters.brokerHostVersion }}'
    - task: UniversalPackages@0
      displayName: 'Download old brokerHost version from feed'
      inputs:
        command: 'download'
        downloadDirectory: '$(Build.ArtifactStagingDirectory)/brokers/oldAPKs'
        feedsToUse: 'external'
        externalFeedCredentials: '${{ parameters.msazureServiceConnection }}'
        feedDownloadExternal: '${{ parameters.msazureFeedName }}'
        packageDownloadExternal: 'broker-host'
        versionDownloadExternal: '${{ parameters.oldBrokerHostVersion }}'
    - task: UniversalPackages@0
      displayName: 'Download brokerHost without broker selection logic from feed'
      inputs:
        command: 'download'
        downloadDirectory: '$(Build.ArtifactStagingDirectory)/brokers/oldAPKs'
        feedsToUse: 'external'
        externalFeedCredentials: '${{ parameters.msazureServiceConnection }}'
        feedDownloadExternal: '${{ parameters.msazureFeedName }}'
        packageDownloadExternal: 'broker-host'
        versionDownloadExternal: '${{ parameters.brokerHostWithoutBrokerSelectionLogicVersion }}'
    - publish: $(Build.ArtifactStagingDirectory)/brokers
      displayName: 'Publish Authenticator/Company Portal Broker apks for later use'
      artifact: brokerapks
    - publish: $(Build.ArtifactStagingDirectory)/azuresample
      displayName: 'Publish Azure Sample apk for later use'
      artifact: azuresample
