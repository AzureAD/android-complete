parameters:
- name: productFlavors
  displayName: Product Flavor
  type: string
  default: Local
  values:
  - Local
  - Dist
- name: signingConfigurations
  displayName: Signing Configuration
  type: string
  default: Debug
  values:
  - Debug
  - Release
- name: adAccountsVersion
  displayName: Broker Version
  type: string
- name: commonVersion
  displayName: Common Version
  type: string
- name: adalVersion
  displayName: ADAL Version
  type: string
- name: msalVersion
  displayName: MSAL Version
  type: string
- name: publishToFeed
  displayName: Publish to Prod Feed?
  type: boolean
  default: False
- name: publishingPackageName
  type: string
  default: "com.microsoft.identity.testuserapp"
- name: feedToPublishTo
  type: string
  default: "AndroidADAL"
- name: packageVariant
  displayName: Package Variant
  type: string
  default: PROD
  values:
    - PROD
    - RC
- name: localFlightsParamString
  type: string
  default: ''
- name: flagsParamString
  type: string
  default: ''
- name: tokenSelection
  default: 'System.AccessToken'

variables:
  - name: brokerHostPackageVersionCounter
    value: $[counter(1, 10000)]

jobs:
- job: brokerhost${{ parameters.packageVariant }}${{ parameters.productFlavors }}${{ parameters.signingConfigurations }}
  displayName: BrokerHost ${{ parameters.packageVariant }} ${{ parameters.productFlavors }} ${{ parameters.signingConfigurations }} APK
  pool:
    vmImage: 'windows-latest'
  variables:
  - group: AndroidAuthClientVariables
  steps:
  - checkout: self
    clean: true
    path: android-complete
  - checkout: common
    clean: true
    path: android-complete/common
  - checkout: msal
    clean: true
    submodules: true
    path: android-complete/msal
  - checkout: adal
    clean: true
    submodules: true
    path: android-complete/adal
  - checkout: broker
    clean: true
    submodules: true
    path: android-complete/broker
  - ${{ if eq(parameters.productFlavors, 'Dist') }}:
    - task: PowerShell@2
      displayName: Generate Assemble Dist Task
      inputs:
        targetType: inline
        script: |
          $assembleTask = "assembleDist${{ parameters.signingConfigurations }}"
          if (("${{ parameters.commonVersion }}" -ne "")) {
              $assembleTask = $assembleTask + " -PcommonVersion=" + "${{ parameters.commonVersion }}"
          }
          if (("${{ parameters.adAccountsVersion }}" -ne "")) {
              $assembleTask = $assembleTask + " -PadAccountsVersion=" + "${{ parameters.adAccountsVersion }}"
          }
          if (("${{ parameters.adalVersion }}" -ne "")) {
              $assembleTask = $assembleTask + " -PadalVersion=" + "${{ parameters.adalVersion }}"
          }
          if (("${{ parameters.msalVersion }}" -ne "")) {
              $assembleTask = $assembleTask + " -PmsalVersion=" + "${{ parameters.msalVersion }}"
          }
          Write-Host "##vso[task.setvariable variable=AssembleTask;]$assembleTask"
  - ${{ if eq(parameters.productFlavors, 'Local') }}:
    - pwsh: echo "##vso[task.setvariable variable=AssembleTask;]assembleLocal${{ parameters.signingConfigurations }} ${{ parameters.flagsParamString }} -PlocalFlights=${{ parameters.localFlightsParamString }}"
      displayName: Generate Assemble Local Task
  - task: CmdLine@1
    displayName: Set MVN AccessToken in Environment
    inputs:
      filename: echo
      arguments: '##vso[task.setvariable variable=ENV_VSTS_MVN_ANDROIDADACCOUNTS_ACCESSTOKEN]$(${{ parameters.tokenSelection }})'
  - task: CmdLine@1
    displayName: Set Office MVN Access Token in Environment
    inputs:
      filename: echo
      arguments: '##vso[task.setvariable variable=ENV_VSTS_MVN_OFFICE_ACCESSTOKEN]$(vstsOfficeMavenAccessToken)'
  - task: Gradle@3
    name: Gradle3
    displayName: Assemble BrokerHost
    inputs:
      tasks: brokerHost:clean brokerHost:$(AssembleTask)
      publishJUnitResults: false
      jdkArchitecture: x64
      jdkVersionOption: "1.11"
      gradleWrapperFile: $(Agent.BuildDirectory)/android-complete/gradlew
      cwd: $(Agent.BuildDirectory)/android-complete
  - task: CopyFiles@2
    inputs:
      SourceFolder: $(Agent.BuildDirectory)/android-complete/broker/userapp/build/outputs/apk
      targetFolder: $(Build.ArtifactStagingDirectory)
      contents: '**/*.apk'
      flattenFolders: true
  - task: PublishPipelineArtifact@1
    displayName: Publish Broker Host APK (Pipeline Artifact)
    inputs:
      targetPath: $(Agent.BuildDirectory)/android-complete/broker/userapp/build/outputs/apk/${{ lower(parameters.productFlavors) }}/${{ lower(parameters.signingConfigurations) }}
      artifactName: BrokerHost-${{ parameters.productFlavors }}-${{ upper(parameters.packageVariant) }}-${{ lower(parameters.signingConfigurations) }}
      patterns: '**/*.apk'
  - ${{ if eq(parameters.publishToFeed, 'True') }}:
      - task: CmdLine@1
        displayName: Set Universal Publish PAT
        inputs:
          filename: echo
          arguments: '##vso[task.setvariable variable=UNIVERSAL_PUBLISH_PAT]$($(${{ parameters.tokenSelection }}))'
      - task: UniversalPackages@0
        displayName: Publishing Brokerhost to feed
        continueOnError: true
        inputs:
          command: publish
          publishDirectory: '$(Build.ArtifactStagingDirectory)'
          vstsFeedPublish: '${{ parameters.feedToPublishTo }}'
          vstsFeedPackagePublish: '${{ parameters.publishingPackageName }}'
          versionOption: custom
          versionPublish: '$(brokerHostPackageVersionCounter)'
          packagePublishDescription: 'BrokerHost Broker version ${{ parameters.adAccountsVersion }}'
      - task: PowerShell@2
        displayName: Add BrokerHost Version Tag
        inputs:
          targetType: inline
          script: |
            Write-Host "##vso[build.addbuildtag]Flights($(brokerHostPackageVersionCounter))"
...
