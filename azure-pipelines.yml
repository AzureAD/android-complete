# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
name: $(Build.BuildId)_$(Build.DefinitionName)_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

trigger: none
pr: none

variables:
  engineering_project_id: 'fac9d424-53d2-45c0-91b5-ef6ba7a6bf26'
  brokerhost_pipeline_id: 1432
  azuresample_pipeline_id: 1458

parameters:
- name: companyPortalLink
  displayName: Company Portal RC Link
  type: string
- name: authenticatorLink
  displayName: Authenticator RC Link
  type: string
- name: BrokerHostRC
  displayName: BrokerHost RC run ID
  type: number
- name: BrokerHostProd
  displayName: BrokerHost prod run ID
  type: number

pool:
  vmImage: ubuntu-latest

steps:
- task: AzureKeyVault@2
  displayName: 'Get Key vault AndroidAutomationRunnerAppSecret'
  inputs:
    azureSubscription: 'MSIDLABS_ANDROID_KV'
    KeyVaultName: 'ADALTestInfo'
    SecretsFilter: 'AndroidAutomationRunnerAppSecret'
    RunAsPreJob: false
- task: DownloadSecureFile@1
  displayName: 'Download Firebase Service Account Key File'
  inputs:
    secureFile: AndroidFirebaseServiceAccountKey.json
    retryCount: 5
- task: CmdLine@1
  displayName: 'Set MVN Access Token in Environment'
  inputs:
    filename: echo
    arguments: '##vso[task.setvariable variable=ENV_VSTS_MVN_ANDROIDADACCOUNTS_ACCESSTOKEN]$(mvnAccessToken)'
# Download APKs
- task: DownloadPipelineArtifact@2
  displayName: 'Download RC Broker Host'
  inputs:
    buildType: specific
    project: '$(engineering_project_id)'
    definition: '$(brokerhost_pipeline_id)'
    artifactName: BrokerHost
    itemPattern: '**/*.apk'
    targetPath: '$(Build.StagingDirectory)/rc'
    runVersion: 'specific'
    runId: ${{ parameters.BrokerHostRC }}
- task: DownloadPipelineArtifact@2
  displayName: 'Download Production Broker Host'
  inputs:
    buildType: specific
    project: '$(engineering_project_id)'
    definition: '$(brokerhost_pipeline_id)'
    artifactName: BrokerHost
    itemPattern: '**/*.apk'
    targetPath: '$(Build.StagingDirectory)/prod'
    runVersion: 'specific'
    runId: ${{ parameters.BrokerHostRC }}
- task: DownloadPipelineArtifact@2
  displayName: 'Download latest Azure Sample'
  inputs:
    buildType: 'specific'
    project: '$(engineering_project_id)'
    definition: '$(azuresample_pipeline_id)'
    artifactName: AzureSample
    itemPattern: '**/*.apk'
    targetPath: '$(Build.StagingDirectory)'
    buildVersionToDownload: 'latest'
- script: curl -L -o Authenticator.apk  "${{ parameters.authenticatorLink }}"
  displayName: 'Download Authenticator'
  workingDirectory: '$(Build.StagingDirectory)'
- script:  curl -L -o CompanyPortal.apk "${{ parameters.companyPortalLink }}"
  displayName: 'Download Company Portal'
  workingDirectory: '$(Build.StagingDirectory)'
- script: ls -R
  displayName: 'check apks'
  workingDirectory: '$(Build.StagingDirectory)'
- script: gcloud version
  displayName: 'Check gcloud version'

